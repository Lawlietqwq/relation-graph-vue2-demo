(function(){ try {var elementStyle = document.createElement('style'); elementStyle.appendChild(document.createTextNode(".rg-icon[data-v-41b1ef18]{width:19px;height:19px;vertical-align:0px;fill:currentColor;overflow:hidden}.el-icon-remove[data-v-41b1ef18],.el-icon-circle-plus[data-v-41b1ef18]{cursor:pointer}.rel-node-peel[data-v-41b1ef18]{clear:both;padding:8px;position:absolute;font-size:14px}.rel-node[data-v-41b1ef18]{text-align:center}.rel-node-shape-1[data-v-41b1ef18]{border-radius:5px}.c-node-text[data-v-41b1ef18]{height:100%;width:100%;display:flex;align-items:center;justify-content:center}.rel-node-shape-1 .c-node-text[data-v-41b1ef18]{padding-left:5px;padding-right:5px}.rel-node-shape-0[data-v-41b1ef18]{width:80px;height:80px;border-radius:50%}.rel-node-type-button[data-v-41b1ef18]{border-radius:25px;color:#00f;cursor:pointer}.rel-node-checked[data-v-41b1ef18],.rel-node-selected[data-v-41b1ef18]{box-shadow:0 0 10px #fd8b37;animation-timing-function:linear;animation:ACTRGNodeInit-41b1ef18 2s}.rel-node-vtree-2[data-v-41b1ef18]{transform-origin:0 0;transform:rotate(30deg) translate(0)}.rel-node-vtree[data-v-41b1ef18]{width:130px;height:45px;text-align:left}.c-btn-open-close[data-v-41b1ef18]{position:absolute;height:100%;width:19px;display:flex;align-items:center;justify-content:center;user-select:none;pointer-events:none}.c-btn-open-close span[data-v-41b1ef18]{width:19px;height:19px;display:inline-block;text-align:center;border-radius:15px;color:#fff;cursor:pointer;font-size:19px;line-height:16px;background-size:100% 100%;pointer-events:all}.c-expanded[data-v-41b1ef18]{background-image:url(data:image/svg+xml;%20charset=utf8,%3Csvg%20t=%221606310217820%22%20viewBox=%220%200%201024%201024%22%20version=%221.1%22%20xmlns=%22http://www.w3.org/2000/svg%22%20p-id=%223373%22%20width=%2232%22%20height=%2232%22%3E%3Cpath%20d=%22M853.333333%20480H544V170.666667c0-17.066667-14.933333-32-32-32s-32%2014.933333-32%2032v309.333333H170.666667c-17.066667%200-32%2014.933333-32%2032s14.933333%2032%2032%2032h309.333333V853.333333c0%2017.066667%2014.933333%2032%2032%2032s32-14.933333%2032-32V544H853.333333c17.066667%200%2032-14.933333%2032-32s-14.933333-32-32-32z%22%20p-id=%223374%22%20fill=%22white%22%3E%3C/path%3E%3C/svg%3E)}.c-collapsed[data-v-41b1ef18]{background-image:url(data:image/svg+xml;%20charset=utf8,%3Csvg%20t=%221606310454619%22%20class=%22icon%22%20viewBox=%220%200%201024%201024%22%20version=%221.1%22%20xmlns=%22http://www.w3.org/2000/svg%22%20p-id=%223662%22%20width=%22128%22%20height=%22128%22%3E%3Cpath%20d=%22M853.333333%20554.666667H170.666667c-23.466667%200-42.666667-19.2-42.666667-42.666667s19.2-42.666667%2042.666667-42.666667h682.666666c23.466667%200%2042.666667%2019.2%2042.666667%2042.666667s-19.2%2042.666667-42.666667%2042.666667z%22%20p-id=%223663%22%20fill=%22white%22%3E%3C/path%3E%3C/svg%3E)}.c-expand-positon-left[data-v-41b1ef18]{margin-top:-8px;margin-left:-25px}.c-expand-positon-right[data-v-41b1ef18]{height:100%;width:100%;justify-content:center}.c-expand-positon-right span[data-v-41b1ef18]{margin-top:-18px;margin-right:-18px;margin-left:100%}.c-expand-positon-bottom[data-v-41b1ef18]{height:100%;width:100%;margin-top:7px;margin-left:-8px;align-items:flex-end;justify-content:center}.c-expand-positon-top[data-v-41b1ef18]{height:18px;width:100%;margin-top:-20px;margin-left:-6px;align-items:flex-end;justify-content:center}@keyframes ACTRGNodeInit-41b1ef18{0%{box-shadow:0 0 15px #fd8b37}15%{box-shadow:0 0 1px #2e4e8f}30%{box-shadow:0 0 15px #fd8b37}45%{box-shadow:0 0 1px #2e4e8f}60%{box-shadow:0 0 15px #fd8b37}to{box-shadow:0 0 1px #2e4e8f}}.rel-diy-node[data-v-41b1ef18]{padding:0}.c-rg-line-text[data-v-5a7c66a9]{fill:#888;font-size:12px}.c-rg-line[data-v-5a7c66a9]{z-index:1000;fill-rule:nonzero}.c-rg-line-tool[data-v-5a7c66a9]{stroke-dasharray:5,5,5}.c-rg-line-flash[data-v-5a7c66a9]{-moz-transform:rotate(-89deg) translateX(-190px);animation-timing-function:linear;animation:ACTRGLineChecked-5a7c66a9 10s}@keyframes ACTRGLineInit-5a7c66a9{0%{stroke-dashoffset:10px;stroke-dasharray:20,20,20}to{stroke-dashoffset:0;stroke-dasharray:0,0,0}}@keyframes ACTRGLineChecked-5a7c66a9{0%{stroke-dashoffset:352px}to{stroke-dashoffset:0}}.c-rg-line-text{fill:#888;font-size:12px}.c-rg-line{z-index:1000;fill-rule:nonzero}.c-rg-line-tool{stroke-dasharray:5,5,5}.c-rg-line-flash{-moz-transform:rotate(-89deg) translateX(-190px);animation-timing-function:linear;animation:ACTRGLineChecked 10s}@keyframes ACTRGLineInit{0%{stroke-dashoffset:10px;stroke-dasharray:20,20,20}to{stroke-dashoffset:0;stroke-dasharray:0,0,0}}@keyframes ACTRGLineChecked{0%{stroke-dashoffset:352px}to{stroke-dashoffset:0}}.c-rg-line-checked{stroke-width:2px;stroke-dasharray:5,5,5;stroke-dashoffset:3px;stroke-linecap:butt;stroke-linejoin:bevel;-moz-transform:rotate(-89deg) translateX(-190px);animation-timing-function:linear;animation:ACTRGLineChecked 10s}.c-rg-line-text[data-v-c6092e44]{fill:#888;font-size:12px}.c-rg-line[data-v-c6092e44]{z-index:1000;fill-rule:nonzero}.c-rg-line-tool[data-v-c6092e44]{stroke-dasharray:5,5,5}.c-rg-line-flash[data-v-c6092e44]{-moz-transform:rotate(-89deg) translateX(-190px);animation-timing-function:linear;animation:ACTRGLineChecked-c6092e44 10s}@keyframes ACTRGLineInit-c6092e44{0%{stroke-dashoffset:10px;stroke-dasharray:20,20,20}to{stroke-dashoffset:0;stroke-dasharray:0,0,0}}@keyframes ACTRGLineChecked-c6092e44{0%{stroke-dashoffset:352px}to{stroke-dashoffset:0}}.rel-map[data-v-0bec2dcf]{background-color:#fff;overflow:hidden;cursor:default;user-select:none}.rel-map-background-norepeat[data-v-0bec2dcf]{background-repeat:no-repeat;background-position:right bottom}.rel-nodediv-for-webkit[data-v-0bec2dcf]{position:absolute;width:100%;top:0px;left:0px;z-index:1000}.rel-map-canvas[data-v-0bec2dcf]{position:relative;top:0px;left:0px;border:0px;z-index:3}svg[data-v-0bec2dcf]{height:100%;width:100%}.rel-linediv[data-v-0bec2dcf]{position:absolute;z-index:900;width:100%;top:0px;left:0px;--stroke: url(#lineStyle);--markerEnd: url(#arrow-default);--markerStart: url(#start-arrow-default);--markerEndChecked: url(#arrow-checked);--markerStartChecked: url(#start-arrow-checked)}.rel-linediv svg[data-v-0bec2dcf]{overflow:visible}.rel-map[data-v-0bec2dcf] img{-webkit-user-drag:none;-webkit-user-select:none}.c-setting-panel[data-v-88390d64]{--height: 300px;--width: 200px;width:300px;height:200px;position:absolute;margin-left:10px;margin-top:5px;font-size:12px;color:#3a5bb2;padding:60px 10px 10px;overflow:hidden;box-shadow:0 0 5px #999;border-radius:5px;z-index:1000;background-color:#fff;border:#999999 solid 1px}.c-setting-panel-button[data-v-88390d64]{height:35px;width:35px;font-size:8px;line-height:35px;text-align:center;border-radius:50%;position:absolute;margin-left:25px;margin-top:20px;background-color:#3a5bb2;color:#fff;cursor:pointer;z-index:1001;box-shadow:0 0 8px #999}.c-setting-panel-button[data-v-88390d64]:hover{box-shadow:0 0 20px #ffa20a;border:#ffffff solid 1px;color:#ffa20a;-moz-transform:rotate(-89deg) translateX(-190px);animation-timing-function:linear;animation:flashButton-88390d64 2s infinite}.c-fixedLayout[data-v-88390d64]{position:fixed;top:125px}@keyframes flashButton-88390d64{0%{box-shadow:0 0 8px #2e4e8f}30%{box-shadow:0 0 20px #ffa20a}to{box-shadow:0 0 8px #2e4e8f}}.c-debug-tools-row[data-v-88390d64]{text-align:left}.c-mini-graph[data-v-1b3b937f]{height:100px;width:100px;position:absolute;margin-left:60px;margin-top:100px;z-index:999}.c-fixedLayout[data-v-1b3b937f]{position:fixed;top:100px}.c-mini-canvas[data-v-1b3b937f]{background-color:#aacbff;border:#7ba8ff solid 1px;opacity:.8;position:relative}.c-mini-view[data-v-1b3b937f]{background-color:#f5a565;border:#c03639 solid 1px;opacity:.5;color:#fff;font-size:14px;text-align:center;display:flex;align-items:center;justify-content:center;position:absolute}.c-mini-node[data-v-1b3b937f]{position:absolute;width:2px;height:2px;background-color:#000;border-radius:1px}.rg-icon[data-v-e412eb0e]{width:16px;height:16px;vertical-align:-3px;fill:currentColor;overflow:hidden}.c-mini-toolbar[data-v-e412eb0e]{width:44px;position:absolute;margin-top:170px;margin-right:10px;z-index:999;border:#bbbbbb solid 1px;background-color:#fff;box-shadow:0 0 8px #ccc;box-sizing:border-box}.c-fixedLayout[data-v-e412eb0e]{position:fixed;top:100px}.c-mb-button[data-v-e412eb0e]{height:44px;width:42px;margin-top:0;background-color:#fff;border-top:#efefef solid 1px;opacity:1;text-align:center;padding-top:3px;cursor:pointer;color:#999;font-size:18px;float:left;box-sizing:border-box;line-height:21px}.c-mb-button .c-mb-text[data-v-e412eb0e]{display:inline-block;height:14px;width:42px;font-size:12px;line-height:12px;margin-top:24px;margin-left:-28px;position:absolute;color:#262626}.c-mb-button-on[data-v-e412eb0e]{background-color:#2e74b5;border-top:#2e4e8f solid 1px;color:#fff}.c-mb-button[data-v-e412eb0e]:hover{background-color:#2e4e8f;border-top:#2e4e8f solid 1px;color:#fff}.c-mb-button:hover .c-mb-text[data-v-e412eb0e],.c-mb-button-on .c-mb-text[data-v-e412eb0e]{color:#fff}.c-mb-button .c-mb-child-panel[data-v-e412eb0e]{height:46px;position:absolute;margin-top:-26px;background-color:#fff;display:none;border:#bbbbbb solid 1px;box-shadow:0 0 8px #ccc;box-sizing:border-box}.c-mb-button:hover .c-mb-child-panel[data-v-e412eb0e]{display:block}.c-mb-button .c-mb-button[data-v-e412eb0e]{height:44px;width:42px;margin:0;border:none}.c-mb-button-c .c-mb-text[data-v-e412eb0e]{color:#262626!important}.c-mb-button-c:hover .c-mb-text[data-v-e412eb0e],.c-mb-button-on .c-mb-text[data-v-e412eb0e]{color:#fff!important}.c-loading-icon[data-v-e412eb0e]{animation:turn-e412eb0e 1s linear infinite}@keyframes turn-e412eb0e{0%{-webkit-transform:rotate(0deg)}25%{-webkit-transform:rotate(90deg)}50%{-webkit-transform:rotate(180deg)}75%{-webkit-transform:rotate(270deg)}to{-webkit-transform:rotate(360deg)}}.xxxxxxxxx[data-v-11ec9aad]{color:red}")); document.head.appendChild(elementStyle);} catch(e) {console.error('vite-plugin-css-injected-by-js', e);} })();var $e = Object.defineProperty;
var Ee = (n, e, t) => e in n ? $e(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t;
var L = (n, e, t) => (Ee(n, typeof e != "symbol" ? e + "" : e, t), t);
import { defineComponent as O, ref as W, inject as X, computed as Y, onMounted as ue, onBeforeUnmount as xe, withDirectives as Pe, openBlock as g, createElementBlock as x, normalizeStyle as D, unref as f, normalizeClass as F, createElementVNode as p, withModifiers as V, createCommentVNode as B, renderSlot as T, vShow as Ne, toDisplayString as oe, Fragment as R, renderList as Z, createBlock as ne, withCtx as re, pushScopeId as we, popScopeId as be, createTextVNode as Be, provide as Ae, nextTick as Ie, createVNode as ge } from "vue";
import * as Fe from "screenfull";
import de from "screenfull";
import * as De from "html2canvas";
import He from "html2canvas";
var We = !function(n) {
  var e, t, o, s, i, a, l = '<svg><symbol id="icon-iconset0444" viewBox="0 0 1024 1024"><path d="M960 682.666667l-106.666667 0C844.8 569.6 763.733333 42.666667 64 42.666667 51.2 42.666667 42.666667 51.2 42.666667 64c0 12.8 8.533333 21.333333 21.333333 21.333333 219.733333 0 377.6 106.666667 465.066667 315.733333 51.2 123.733333 64 236.8 66.133333 281.6L490.666667 682.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333 0 6.4 2.133333 10.666667 6.4 14.933333l234.666667 256c4.266667 4.266667 8.533333 6.4 14.933333 6.4 6.4 0 10.666667-2.133333 14.933333-6.4l234.666667-256c4.266667-4.266667 6.4-8.533333 6.4-14.933333C981.333333 691.2 972.8 682.666667 960 682.666667zM725.333333 928 539.733333 725.333333 618.666667 725.333333c12.8 0 21.333333-8.533333 21.333333-21.333333l0-21.333333c-4.266667-87.466667-38.4-396.8-273.066667-554.666667C755.2 251.733333 804.266667 588.8 810.666667 682.666667l0 21.333333c0 12.8 8.533333 21.333333 21.333333 21.333333l78.933333 0L725.333333 928z"  ></path></symbol><symbol id="icon-iconset0445" viewBox="0 0 1024 1024"><path d="M974.933333 305.066667l-234.666667-256C736 44.8 731.733333 42.666667 725.333333 42.666667c-6.4 0-10.666667 2.133333-14.933333 6.4l-234.666667 256C471.466667 309.333333 469.333333 313.6 469.333333 320c0 12.8 8.533333 21.333333 21.333333 21.333333l104.533333 0c-2.133333 44.8-14.933333 157.866667-66.133333 281.6C441.6 832 283.733333 938.666667 64 938.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333 0 12.8 8.533333 21.333333 21.333333 21.333333 699.733333 0 780.8-526.933333 789.333333-640l106.666667 0c12.8 0 21.333333-8.533333 21.333333-21.333333C981.333333 313.6 979.2 309.333333 974.933333 305.066667zM832 298.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333l0 21.333333c-6.4 93.866667-55.466667 430.933333-443.733333 554.666667 234.666667-157.866667 268.8-467.2 273.066667-554.666667l0-21.333333c0-12.8-8.533333-21.333333-21.333333-21.333333l-78.933333 0L725.333333 96l185.6 202.666667L832 298.666667z"  ></path></symbol><symbol id="icon-yuanquanfenxiang" viewBox="0 0 1024 1024"><path d="M751.148705 578.773799c-61.987796 0-117.066229 30.121018-151.388942 76.488045L398.287145 536.382317c1.991354-10.171664 3.046383-20.673855 3.046383-31.419594 0-18.776645-3.196809-36.817534-9.058306-53.621245l193.486736-107.492176c31.949666 58.566884 94.104261 98.391914 165.386748 98.391914 103.803157 0 188.254571-84.450391 188.254571-188.254571S854.951863 65.73105 751.148705 65.73105c-103.804181 0-188.255595 84.450391-188.255595 188.254571 0 14.246469 1.600451 28.125571 4.613064 41.4746L368.032074 406.279167c-29.841655-39.193651-76.976162-64.544015-129.927141-64.544015-90.004897 0-163.228595 73.223698-163.228595 163.228595 0 90.003873 73.223698 163.228595 163.228595 163.228595 60.882626 0 114.078175-33.510208 142.134161-83.049484L575.173808 700.16452c-7.925507 20.788465-12.280698 43.325761-12.280698 66.86385 0 103.803157 84.450391 188.254571 188.255595 188.254571 103.803157 0 188.254571-84.450391 188.254571-188.254571S854.951863 578.773799 751.148705 578.773799zM751.148705 116.89636c75.590606 0 137.089261 61.498656 137.089261 137.089261s-61.498656 137.089261-137.089261 137.089261c-75.591629 0-137.090285-61.498656-137.090285-137.089261S675.557076 116.89636 751.148705 116.89636zM238.105956 617.026008c-61.791321 0-112.063285-50.27094-112.063285-112.063285 0-61.791321 50.27094-112.063285 112.063285-112.063285s112.063285 50.27094 112.063285 112.063285C350.168218 566.755068 299.897278 617.026008 238.105956 617.026008zM751.148705 904.117632c-75.591629 0-137.090285-61.498656-137.090285-137.089261s61.498656-137.089261 137.090285-137.089261c75.590606 0 137.089261 61.498656 137.089261 137.089261S826.739311 904.117632 751.148705 904.117632z"  ></path></symbol><symbol id="icon-hj2" viewBox="0 0 1024 1024"><path d="M963.66 256.607c0-0.244 0-0.607-0.126-0.851 0-0.369 0-0.614-0.119-0.978 0-0.369-0.119-0.733-0.119-1.104 0-0.244 0-0.487-0.126-0.725 0-0.369-0.119-0.859-0.244-1.222 0-0.244-0.119-0.369-0.119-0.613-0.126-0.365-0.126-0.852-0.245-1.216 0-0.244-0.126-0.369-0.126-0.613-0.119-0.365-0.244-0.734-0.364-1.222-0.126-0.244-0.126-0.49-0.244-0.609l-0.369-1.095c-0.119-0.245-0.119-0.49-0.244-0.734-0.121-0.369-0.245-0.613-0.365-0.978-0.126-0.244-0.244-0.613-0.369-0.851-0.119-0.244-0.238-0.613-0.364-0.859-0.119-0.364-0.244-0.607-0.364-0.977l-0.371-0.734c-0.119-0.364-0.364-0.725-0.487-0.971-0.119-0.245-0.244-0.371-0.364-0.614-0.244-0.364-0.369-0.733-0.614-1.097-0.119-0.126-0.244-0.369-0.364-0.487l-0.733-1.097c-0.119-0.126-0.244-0.369-0.365-0.487-0.244-0.369-0.487-0.733-0.733-0.978-0.126-0.244-0.244-0.369-0.487-0.613-0.245-0.238-0.49-0.607-0.734-0.851-0.244-0.245-0.487-0.49-0.607-0.734-0.244-0.244-0.369-0.487-0.614-0.733-0.851-0.972-1.829-1.83-2.681-2.682-0.245-0.244-0.49-0.369-0.734-0.614-0.244-0.244-0.487-0.487-0.733-0.607-0.245-0.244-0.614-0.487-0.859-0.733-0.238-0.121-0.364-0.365-0.607-0.49-0.365-0.244-0.734-0.487-0.978-0.733-0.119-0.119-0.364-0.244-0.487-0.365l-1.097-0.733c-0.119-0.119-0.364-0.244-0.487-0.364-0.365-0.244-0.734-0.369-1.097-0.614-0.244-0.119-0.369-0.244-0.613-0.364-0.365-0.126-0.734-0.369-0.972-0.487l-0.734-0.369c-0.369-0.121-0.613-0.245-0.977-0.365-0.244-0.126-0.614-0.244-0.859-0.369-0.244-0.119-0.607-0.238-0.851-0.364-0.365-0.119-0.609-0.244-0.978-0.364-0.244-0.126-0.487-0.126-0.733-0.245l-1.097-0.369c-0.244-0.119-0.487-0.119-0.609-0.244-0.369-0.119-0.733-0.244-1.22-0.364-0.245 0-0.371-0.126-0.614-0.126-0.364-0.119-0.851-0.244-1.216-0.244-0.244 0-0.487-0.121-0.613-0.121-0.364-0.126-0.852-0.126-1.222-0.244-0.244 0-0.482-0.126-0.725-0.126-0.369 0-0.734-0.119-1.104-0.119-0.364 0-0.607 0-0.978-0.126-0.244 0-0.607 0-0.851-0.119h-242.407c-21.604 0-39.062 17.456-39.062 39.062 0 21.604 17.458 39.055 39.062 39.055h146.102l-3.171 3.177-217.27 217.265 0.369 0.369-49.676 49.676-155.87-155.87c-7.694-7.689-17.827-11.472-27.953-11.472-10.13-0.126-20.263 3.659-27.952 11.472l-282.446 282.322c-15.258 15.258-15.258 40.041 0 55.298 15.258 15.258 40.033 15.258 55.291 0l255.108-255.11 155.746 155.751c7.813 7.815 17.945 11.593 28.076 11.474 10.126 0.119 20.382-3.659 28.070-11.474l182.964-182.969c0.734-0.734 1.347-1.342 1.956-2.075l111.564-111.564v146.109c0 21.604 17.451 39.060 39.055 39.060s39.062-17.456 39.062-39.060v-235.085c0-0.244 0.126-0.49 0.126-0.614 0-0.244 0.119-0.487 0.119-0.733 0-0.364 0.119-0.734 0.119-1.097s0-0.607 0.126-0.977c0-0.245 0-0.609 0.119-0.852-0.122-1.466-0.122-2.807-0.122-4.030v0zM963.66 256.607z"  ></path></symbol><symbol id="icon-circleyuanquan" viewBox="0 0 1024 1024"><path d="M150.1184 150.1184C250.2656 50.0736 370.8928 0 512 0c141.1072 0 261.7344 50.0736 361.8816 150.1184C973.9264 250.2656 1024 370.8928 1024 512c0 141.2096-50.0736 261.8368-150.1184 361.8816C773.7344 973.9264 653.1072 1024 512 1024c-141.1072 0-261.7344-50.0736-361.8816-150.1184C50.0736 773.8368 0 653.2096 0 512 0 370.8928 50.0736 250.2656 150.1184 150.1184zM512 41.8816c-85.2992 0-164.1472 20.8896-236.3392 62.7712C203.4688 146.432 146.432 203.4688 104.6528 275.6608 62.7712 347.9552 41.8816 426.7008 41.8816 512c0 129.6384 45.9776 240.4352 137.8304 332.288C271.5648 936.2432 382.3616 982.1184 512 982.1184c129.6384 0 240.4352-45.8752 332.288-137.8304C936.2432 752.4352 982.1184 641.6384 982.1184 512c0-129.6384-45.9776-240.3328-137.8304-332.288C752.4352 87.7568 641.6384 41.8816 512 41.8816zM512 256c-36.1472 0-70.144 7.0656-102.1952 20.8896C377.856 290.9184 349.4912 309.3504 324.9152 332.288c-22.9376 24.576-41.472 52.9408-55.3984 84.8896S248.6272 483.328 248.6272 519.3728c0 36.1472 6.9632 70.144 20.8896 102.1952s32.4608 60.3136 55.3984 84.8896C349.4912 729.4976 377.856 747.9296 409.8048 761.856 441.856 775.7824 475.8528 782.7456 512 782.7456c36.1472 0 70.144-6.9632 102.1952-20.8896C646.144 747.9296 674.5088 729.4976 699.0848 706.4576c22.9376-24.576 41.472-52.9408 55.3984-84.8896s20.8896-66.048 20.8896-102.1952c0-36.0448-6.9632-70.144-20.8896-102.1952S722.0224 356.9664 699.0848 332.288C674.5088 309.3504 646.144 290.9184 614.1952 276.8896 582.144 263.0656 548.1472 256 512 256z"  ></path></symbol><symbol id="icon-bhjlink" viewBox="0 0 1024 1024"><path d="M901.920618 465.785468c-50.993571 0-94.522533 32.698367-110.688942 78.273953L702.244627 544.059421c1.764013-10.590222 2.890616-21.423121 2.890616-32.694527 0-72.177856-40.480145-134.923579-99.898281-166.857822l34.099901-112.776268c8.829281 2.126492 18.1347 3.327588 27.724265 3.327588 64.833817 0 117.472367-52.597848 117.472367-117.589097C784.532727 52.594008 731.894177 0 667.06036 0c-64.911381 0-117.509229 52.594008-117.509229 117.470063 0 49.305587 30.248562 91.349307 73.177745 108.842756l-33.419485 110.692013c-22.548956-9.588797-47.462473-14.807112-73.540224-14.807112-49.18732 0-93.841349 18.658451-127.540374 49.309426L213.348053 196.583401l-1.886119 2.008226c19.940183-21.103648 32.256788-49.588197 32.256788-81.003297 0-64.872983-52.517212-117.470063-117.470063-117.470063-64.913685 0-117.511533 52.59708-117.511533 117.470063 0 65.034255 52.59708 117.592169 117.511533 117.592169 31.412796 0 59.898881-12.358075 80.921125-32.335888l-6.179038 6.056931 174.960609 174.879973c-30.729308 33.66293-49.506025 78.47516-49.506025 127.661712 0 43.008283 14.401627 82.685138 38.593258 114.501114l-149.845117 120.999625c-21.503757-28.044506-55.285722-46.218372-93.357532-46.218372-64.874519 0-117.430897 52.719186-117.430897 117.592169 0 64.833049 52.556378 117.470063 117.430897 117.470063 64.872983 0 117.549163-52.637014 117.549163-117.470063 0-20.541499-5.335813-39.878062-14.602834-56.68956l151.369526-122.203792c34.584487 37.633303 84.29095 61.384123 139.618142 61.384123 28.082136 0 54.602234-6.057699 78.553492-17.091805l52.716114 119.514383c-35.585143 20.222026-59.497236 58.335306-59.497236 102.106945 0 64.912149 52.637014 117.549163 117.592169 117.549163 64.872983 0 117.388659-52.637014 117.388659-117.549163 0-64.833049-52.516444-117.513069-117.388659-117.513069-15.047485 0-29.248673 2.929782-42.446133 7.903885l-52.798286-120.034294c42.807844-24.554878 75.182898-65.518073 88.46253-114.221576l88.222926 0c-1.405374 7.018422-1.96522 14.241123-1.96522 21.743362 0 64.872983 52.557914 117.509997 117.387123 117.509997 64.995089 0 117.596009-52.637014 117.596009-117.509997C1019.508947 518.383316 966.994039 465.785468 901.920618 465.785468L901.920618 465.785468zM901.920618 465.785468"  ></path></symbol><symbol id="icon-lianjie_connecting5" viewBox="0 0 1024 1024"><path d="M801.25952 251.74016l-28.9792-28.99968-150.79424 150.8352-35.1232-35.10272-99.14368 99.16416 99.14368 99.16416 99.16416-99.16416-35.10272-35.1232zM487.19872 476.8768l-29.94176 29.94176-19.61984-19.61984-99.16416 99.16416 35.10272 35.1232-150.8352 150.79424 28.95872 28.95872 150.8352-150.79424 35.10272 35.10272 99.14368-99.14368-19.61984-19.64032 29.96224-29.96224-59.92448-59.92448z m-15.48288 44.4416l15.4624-15.4624 30.98624 30.98624-15.4624 15.44192-30.98624-30.96576z" fill="" ></path></symbol><symbol id="icon-xiazai" viewBox="0 0 1024 1024"><path d="M840.5 900.3h-657c-16.5 0-29.9 13.4-29.9 29.9s13.4 29.9 29.9 29.9h657.1c16.5 0 29.9-13.4 29.9-29.9-0.1-16.6-13.5-29.9-30-29.9zM631.5 123.7V541.8H763.1L512 769.9l-251.2-228h131.7V123.7h239m0-59.7h-239c-33 0-59.7 26.7-59.7 59.7v358.4H183.5c-26.6 0-39.9 32.2-21.1 51l328.5 298.2c5.8 5.8 13.5 8.7 21.1 8.7s15.3-2.9 21.1-8.7l328.5-298.2c18.8-18.8 5.5-51-21.1-51H691.2V123.7c0-33-26.7-59.7-59.7-59.7z"  ></path></symbol><symbol id="icon-ico_reset" viewBox="0 0 1024 1024"><path d="M925.97087933 277.33133334a479.997 479.997 0 1 0 54.33566 255.9984H916.05094133a415.9974 415.9974 0 1 1-64.191599-255.9984h74.047537z"  ></path><path d="M978.64255033 61.01268534L725.33213333 371.09074734h297.59814z"  ></path></symbol><symbol id="icon-fangda" viewBox="0 0 1024 1024"><path d="M768 448a320 320 0 1 0-320 320 320 320 0 0 0 320-320z m64 0A384 384 0 1 1 448 64a384 384 0 0 1 384 384z"  ></path><path d="M681.28 726.72a32 32 0 0 1 45.44-45.44l160 160a32 32 0 0 1-45.44 45.44zM320 480a32 32 0 0 1 0-64h256a32 32 0 0 1 0 64z"  ></path><path d="M480 576a32 32 0 0 1-64 0V320a32 32 0 0 1 64 0z"  ></path></symbol><symbol id="icon-zidong" viewBox="0 0 1024 1024"><path d="M131.3 363.3c-19.2 47.3-28.9 97.3-28.9 148.7 0 51.3 9.7 101.3 28.9 148.7 7 17.2 15.1 33.8 24.3 49.7l15.8-49.1 42.8 13.8-39.8 123.8-42.8-13.9-80.9-26 13.8-42.8 52.3 16.8c-98-168.4-74.8-387.9 69.4-532.1C342.4 44.7 586.9 30.5 759.1 158.3l-32.2 32.2c-25.1-18-52.1-32.9-80.9-44.6-47.3-19.2-97.3-28.9-148.7-28.9-51.3 0-101.3 9.7-148.7 28.9-49 19.9-92.9 49.1-130.6 86.8s-66.9 81.7-86.7 130.6z m828.3-60.2l13.8-42.8-80.9-26-42.8-13.8-39.8 123.8 42.8 13.8 15-46.7c9.8 16.6 18.4 34 25.8 52.1 19.2 47.3 28.9 97.3 28.9 148.7 0 51.3-9.7 101.3-28.9 148.7-19.9 49-49.1 92.9-86.8 130.6C768.9 829 725 858.2 676 878.1c-47.3 19.2-97.3 28.9-148.7 28.9-51.3 0-101.3-9.7-148.7-28.9-28.8-11.7-55.9-26.6-80.9-44.6l-32.2 32.2c126.3 93.7 382.6 147.7 572.9-42.6 145.8-145.8 167.9-368.6 66.1-537.7l55.1 17.7zM474 241.2L295 730.4h64.8l50.5-148.2h195.3l54 148.2h70.3L539.6 241.2H474z m-45.9 288.3L479.8 386c11-30.9 19.4-62.1 25.4-93.4 6.9 26 17.9 59.9 32.8 101.5l48.2 135.5H428.1z" fill="" ></path></symbol><symbol id="icon-quanping" viewBox="0 0 1024 1024"><path d="M795.5 192H581c-19.6 0-35.6 15.7-36 35.3-0.4 20.3 16.4 36.7 36.7 36.7h128.4L581 393.1c-14 14-14 36.9 0 50.9s36.9 14 50.9 0L760 315.9v129c0 19.6 15.8 35.6 35.3 36 20.2 0.4 36.7-16.4 36.7-36.7V228.5c0-20.1-16.3-36.5-36.5-36.5zM442.2 760H313.8L443 630.9c14-14 14-36.9 0-50.9s-36.9-14-50.9 0L264 708.1V579c0-19.6-15.8-35.6-35.3-36-20.2-0.4-36.7 16.4-36.7 36.7v215.6c0 20.3 16.4 36.7 36.7 36.7H443c19.6 0 35.6-15.7 36-35.3 0.3-20.3-16.5-36.7-36.8-36.7z"  ></path><path d="M838 136c27.6 0 50 22.4 50 50v652c0 27.6-22.4 50-50 50H186c-27.6 0-50-22.4-50-50V186c0-27.6 22.4-50 50-50h652m0-72H186c-16.4 0-32.4 3.2-47.5 9.6-14.5 6.1-27.6 14.9-38.8 26.1-11.2 11.2-20 24.2-26.1 38.8-6.4 15.1-9.6 31.1-9.6 47.5v652c0 16.4 3.2 32.4 9.6 47.5 6.1 14.5 14.9 27.6 26.1 38.8 11.2 11.2 24.2 20 38.8 26.1 15.1 6.4 31.1 9.6 47.5 9.6h652c16.4 0 32.4-3.2 47.5-9.6 14.5-6.1 27.6-14.9 38.8-26.1 11.2-11.2 20-24.2 26.1-38.8 6.4-15.1 9.6-31.1 9.6-47.5V186c0-16.4-3.2-32.4-9.6-47.5-6.1-14.5-14.9-27.6-26.1-38.8-11.2-11.2-24.2-20-38.8-26.1-15.1-6.4-31.1-9.6-47.5-9.6z"  ></path></symbol><symbol id="icon-lianjieliu" viewBox="0 0 1024 1024"><path d="M280.224 425.856h348.608a29.536 29.536 0 1 0 0-59.072H280.224c-52.448 0-93.152-34.304-93.152-73.856s40.704-73.856 93.152-73.856h140.128C432.096 258.816 468.448 288 512 288s79.904-29.184 91.648-68.928h178.08a29.536 29.536 0 1 0 0-59.072h-179.584C588.896 122.784 553.728 96 512 96s-76.896 26.784-90.112 64H280.224C197.184 160 128 218.272 128 292.928s69.184 132.928 152.224 132.928z"  ></path><path d="M895.936 415.2A96 96 0 1 0 800 512c30.656 0 57.632-14.624 75.2-36.992 10.56 12.064 16.832 26.56 16.832 41.92 0 39.552-40.704 73.856-93.152 73.856H306.016A95.584 95.584 0 0 0 224 544a95.68 95.68 0 0 0-95.232 88.352C89.888 656.224 64 695.424 64 740.928c0 74.656 69.184 132.928 152.224 132.928h241.728A95.808 95.808 0 0 0 544 928a96 96 0 1 0 0-192 95.904 95.904 0 0 0-94.272 78.752H216.224c-52.448 0-93.152-34.304-93.152-73.856 0-17.504 8.32-33.792 21.76-46.72A95.808 95.808 0 0 0 224 736a95.68 95.68 0 0 0 95.008-86.144h479.84c83.072 0 152.224-58.272 152.224-132.928 0.032-41.536-21.824-77.568-55.136-101.728z"  ></path></symbol><symbol id="icon-shuaxin" viewBox="0 0 1024 1024"><path d="M512 919.552c-224.768 0-407.552-182.784-407.552-407.552 0-8.704 0.512-17.408 1.024-26.112l71.68 4.608c-0.512 7.168-0.512 14.336-0.512 21.504 0 185.344 150.528 335.872 335.872 335.872 86.528 0 168.448-32.768 230.912-92.16l49.152 52.224C716.288 880.128 616.96 919.552 512 919.552zM919.552 512h-71.68c0-11.776-0.512-23.552-2.048-35.328-17.92-171.52-161.28-300.544-334.336-300.544-67.584 0-132.096 19.968-187.904 57.344L284.16 174.08c67.072-45.568 145.92-69.632 227.84-69.632 209.408 0 384 156.672 405.504 365.056 1.536 13.824 2.048 28.16 2.048 42.496z" fill="#707070" ></path><path d="M140.288 290.816L28.16 491.52c-3.072 5.12 1.024 11.776 6.656 11.776H258.56c6.144 0 9.728-6.144 6.656-11.776L153.6 290.816c-3.072-5.632-10.752-5.632-13.312 0zM870.4 675.84L758.272 475.136c-3.072-5.12 1.024-11.776 6.656-11.776h223.744c6.144 0 9.728 6.144 6.656 11.776L883.712 675.84c-2.56 5.12-10.24 5.12-13.312 0zM270.336 202.24a35.84 35.84 0 1 0 71.68 0 35.84 35.84 0 1 0-71.68 0zM728.576 784.896a35.84 35.84 0 1 0 71.68 0 35.84 35.84 0 1 0-71.68 0z" fill="#707070" ></path></symbol><symbol id="icon-resize-" viewBox="0 0 1024 1024"><path d="M410.816 673.514667L230.997333 853.333333H384v85.333334H85.333333V640h85.333334v153.002667l179.818666-179.84 60.330667 60.373333z m-53.632-256L170.666667 230.997333V384H85.333333V85.333333h298.666667v85.333334h-153.002667l186.517334 186.517333-60.330667 60.330667z m234.666667-45.696L793.002667 170.666667H640V85.333333h298.666667v298.666667h-85.333334v-153.002667l-201.152 201.173334-60.330666-60.373334z m67.029333 226.709333L853.333333 793.002667V640h85.333334v298.666667H640v-85.333334h153.002667l-194.474667-194.453333 60.352-60.352z"  ></path></symbol><symbol id="icon-guanxitu" viewBox="0 0 1024 1024"><path d="M209.003789 401.084632l29.749895-44.948211 107.843369 71.464421-29.749895 44.894316zM682.469053 546.600421l-14.551579-51.846737 124.496842-35.031579 14.551579 51.846737zM315.068632 812.840421l-40.367158-35.678316 85.692631-96.902737 40.421053 35.732211zM597.962105 390.251789l-46.672842-26.947368 43.11579-74.64421 46.672842 26.947368zM615.639579 728.764632l41.121684-34.816 83.536842 98.735157-41.121684 34.816z" fill="#444A5C" ></path><path d="M501.221053 765.305263c-118.568421 0-215.578947-97.010526-215.578948-215.578947s97.010526-215.578947 215.578948-215.578948 215.578947 97.010526 215.578947 215.578948-97.010526 215.578947-215.578947 215.578947z m0-377.263158c-91.621053 0-161.684211 70.063158-161.684211 161.684211s70.063158 161.684211 161.684211 161.68421 161.684211-70.063158 161.68421-161.68421-75.452632-161.684211-161.68421-161.684211zM167.073684 452.715789c-59.284211 0-107.789474-48.505263-107.789473-107.789473s48.505263-107.789474 107.789473-107.789474 107.789474 48.505263 107.789474 107.789474-48.505263 107.789474-107.789474 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894737 53.894737-21.557895 53.894737-53.894737-26.947368-53.894737-53.894737-53.894737zM253.305263 948.547368c-59.284211 0-107.789474-48.505263-107.789474-107.789473s48.505263-107.789474 107.789474-107.789474 107.789474 48.505263 107.789474 107.789474-48.505263 107.789474-107.789474 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894737 53.894737-21.557895 53.894737-53.894737-21.557895-53.894737-53.894737-53.894737zM856.926316 576.673684c-59.284211 0-107.789474-48.505263-107.789474-107.789473s48.505263-107.789474 107.789474-107.789474 107.789474 48.505263 107.789473 107.789474-48.505263 107.789474-107.789473 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894736 53.894737-21.557895 53.894737-53.894736-21.557895-53.894737-53.894737-53.894737zM662.905263 350.315789C592.842105 350.315789 528.168421 291.031579 528.168421 215.578947s59.284211-134.736842 134.736842-134.736842 134.736842 59.284211 134.736842 134.736842-59.284211 134.736842-134.736842 134.736842z m0-215.578947c-43.115789 0-80.842105 37.726316-80.842105 80.842105s37.726316 80.842105 80.842105 80.842106 80.842105-37.726316 80.842105-80.842106-32.336842-80.842105-80.842105-80.842105zM749.136842 921.6c-43.115789 0-80.842105-37.726316-80.842105-80.842105s37.726316-80.842105 80.842105-80.842106 80.842105 37.726316 80.842105 80.842106-37.726316 80.842105-80.842105 80.842105z m0-107.789474c-16.168421 0-26.947368 10.778947-26.947368 26.947369s10.778947 26.947368 26.947368 26.947368 26.947368-10.778947 26.947369-26.947368-10.778947-26.947368-26.947369-26.947369z" fill="#444A5C" ></path></symbol><symbol id="icon-tupian" viewBox="0 0 1024 1024"><path d="M938.666667 553.92V768c0 64.8-52.533333 117.333333-117.333334 117.333333H202.666667c-64.8 0-117.333333-52.533333-117.333334-117.333333V256c0-64.8 52.533333-117.333333 117.333334-117.333333h618.666666c64.8 0 117.333333 52.533333 117.333334 117.333333v297.92z m-64-74.624V256a53.333333 53.333333 0 0 0-53.333334-53.333333H202.666667a53.333333 53.333333 0 0 0-53.333334 53.333333v344.48A290.090667 290.090667 0 0 1 192 597.333333a286.88 286.88 0 0 1 183.296 65.845334C427.029333 528.384 556.906667 437.333333 704 437.333333c65.706667 0 126.997333 16.778667 170.666667 41.962667z m0 82.24c-5.333333-8.32-21.130667-21.653333-43.648-32.917333C796.768 511.488 753.045333 501.333333 704 501.333333c-121.770667 0-229.130667 76.266667-270.432 188.693334-2.730667 7.445333-7.402667 20.32-13.994667 38.581333-7.68 21.301333-34.453333 28.106667-51.370666 13.056-16.437333-14.634667-28.554667-25.066667-36.138667-31.146667A222.890667 222.890667 0 0 0 192 661.333333c-14.464 0-28.725333 1.365333-42.666667 4.053334V768a53.333333 53.333333 0 0 0 53.333334 53.333333h618.666666a53.333333 53.333333 0 0 0 53.333334-53.333333V561.525333zM320 480a96 96 0 1 1 0-192 96 96 0 0 1 0 192z m0-64a32 32 0 1 0 0-64 32 32 0 0 0 0 64z"  ></path></symbol><symbol id="icon-juhejiedian" viewBox="0 0 1024 1024"><path d="M533.333333 725.333333a64 64 0 1 1-64 64 64 64 0 0 1 64-64m0-85.333333a149.333333 149.333333 0 1 0 149.333334 149.333333 149.333333 149.333333 0 0 0-149.333334-149.333333z" fill="#666666" ></path><path d="M533.333333 277.333333m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M277.333333 320m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M789.333333 320m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M512 341.333333h42.666667v384h-42.666667z" fill="#666666" ></path><path d="M741.290667 357.504l30.165333 30.165333-225.066667 225.066667-30.165333-30.165333z" fill="#666666" ></path><path d="M558.08 582.016l-30.165333 30.165333-228.693334-228.693333 30.165334-30.165333z" fill="#666666" ></path></symbol><symbol id="icon-ziyuan" viewBox="0 0 1024 1024"><path d="M236.615854 752.86913h-0.484162A241.500139 241.500139 0 0 1 0.538332 527.733676a238.78883 238.78883 0 0 1 64.684079-180.011531 242.081134 242.081134 0 0 1 149.025146-74.367324 298.534454 298.534454 0 0 1 596.003751 25.951097V300.95207a221.262156 221.262156 0 0 1 213.031398 233.075715 222.714643 222.714643 0 0 1-221.262156 209.1581h-3.098639a27.500417 27.500417 0 0 1 0-54.904001h2.711309A167.520145 167.520145 0 0 0 968.378705 531.219644a166.261323 166.261323 0 0 0-166.16449-175.363573 151.058627 151.058627 0 0 0-18.204502 1.065157 27.500417 27.500417 0 0 1-30.211725-30.308558 240.822312 240.822312 0 0 0 1.549319-27.306752 243.727285 243.727285 0 0 0-487.357738 0 27.500417 27.500417 0 0 1-27.403584 27.500417 185.627813 185.627813 0 0 0-185.240484 197.538205A186.30564 186.30564 0 0 0 237.100016 697.965129a27.500417 27.500417 0 0 1-0.484162 54.904001z"  ></path><path d="M513.266174 1021.869686a27.500417 27.500417 0 0 1-27.500417-27.403584v-484.162268a27.500417 27.500417 0 1 1 54.904001 0v484.162268a27.403584 27.403584 0 0 1-27.403584 27.403584z"  ></path><path d="M513.266174 1024a27.500417 27.500417 0 0 1-19.366491-8.037094L342.260061 864.129619a27.500417 27.500417 0 1 1 38.732981-38.732981L513.266174 957.766602l130.530147-130.336483a27.500417 27.500417 0 0 1 38.732981 38.732982L532.632664 1015.962906a27.403584 27.403584 0 0 1-19.36649 8.037094z"  ></path></symbol><symbol id="icon-add-select" viewBox="0 0 1024 1024"><path d="M544 213.333333v266.666667H810.666667v64H544V810.666667h-64V544H213.333333v-64h266.666667V213.333333z"  ></path></symbol><symbol id="icon-sami-select" viewBox="0 0 1024 1024"><path d="M810.666667 480v64H213.333333v-64z"  ></path></symbol><symbol id="icon-icon_shuaxin" viewBox="0 0 1024 1024"><path d="M512 938.666667c-55.371852 0-109.226667-10.903704-159.857778-32.237037-48.924444-20.66963-92.823704-50.251852-130.465185-87.988149-37.736296-37.736296-67.318519-81.635556-87.988148-130.465185-21.428148-50.631111-32.237037-104.391111-32.237037-159.857777s10.903704-109.226667 32.237037-159.857778c20.66963-48.924444 50.251852-92.823704 87.988148-130.465185 37.736296-37.736296 81.635556-67.318519 130.465185-87.988149 50.631111-21.428148 104.391111-32.237037 159.857778-32.237037 63.81037 0 125.060741 14.222222 181.854815 42.382223 54.139259 26.832593 102.684444 66.085926 140.325926 113.682963 7.300741 9.197037 5.783704 22.660741-3.508148 29.961481-9.197037 7.300741-22.660741 5.783704-29.961482-3.508148-70.257778-88.936296-175.502222-139.946667-288.711111-139.946667-202.808889 0-367.881481 165.072593-367.881481 367.881482s165.072593 367.881481 367.881481 367.881481 367.881481-165.072593 367.881481-367.881481c0-11.757037 9.576296-21.333333 21.333334-21.333334S922.548148 516.361481 922.548148 528.118519c0 55.371852-10.903704 109.226667-32.237037 159.857777-20.66963 48.924444-50.251852 92.823704-87.988148 130.465185-37.736296 37.736296-81.635556 67.318519-130.465185 87.988149-50.631111 21.428148-104.485926 32.237037-159.857778 32.237037z"  ></path><path d="M817.398519 308.242963c-11.757037 0-21.333333-9.576296-21.333334-21.333333V106.666667c0-11.757037 9.576296-21.333333 21.333334-21.333334s21.333333 9.576296 21.333333 21.333334v180.242963c0 11.757037-9.481481 21.333333-21.333333 21.333333z"  ></path><path d="M817.398519 308.242963H637.155556c-11.757037 0-21.333333-9.576296-21.333334-21.333333s9.576296-21.333333 21.333334-21.333334h180.242963c11.757037 0 21.333333 9.576296 21.333333 21.333334s-9.481481 21.333333-21.333333 21.333333z"  ></path></symbol><symbol id="icon-lianjiezhong" viewBox="0 0 1024 1024"><path d="M883.396923 298.141538a99.721846 99.721846 0 0 1-142.414769 0 103.187692 103.187692 0 0 1 0-144.423384 99.721846 99.721846 0 0 1 142.414769 0 103.187692 103.187692 0 0 1 0 144.423384zM285.144615 760.438154a87.276308 87.276308 0 0 0-124.652307 0 90.269538 90.269538 0 0 0 0 126.385231c34.422154 34.894769 90.230154 34.894769 124.652307 0a90.269538 90.269538 0 0 0 0-126.424616z m482.579693 108.307692a64.472615 64.472615 0 0 1 0-90.269538 62.345846 62.345846 0 0 1 89.00923 0c24.576 24.930462 24.576 65.378462 0 90.269538a62.345846 62.345846 0 0 1-89.00923 0zM294.006154 298.141538a103.187692 103.187692 0 0 0 0-144.423384 99.721846 99.721846 0 0 0-142.454154 0 103.187692 103.187692 0 0 0 0 144.423384 99.721846 99.721846 0 0 0 142.454154 0z m324.214154-196.01723c0 56.438154-45.095385 102.163692-100.745846 102.163692-55.611077 0-100.706462-45.725538-100.706462-102.163692C416.768 45.725538 461.863385 0 517.474462 0c55.650462 0 100.745846 45.725538 100.745846 102.124308zM517.474462 870.793846c-41.747692 0-75.539692 34.264615-75.539693 76.603077 0 42.299077 33.831385 76.603077 75.539693 76.603077 41.747692 0 75.539692-34.264615 75.539692-76.603077 0-42.299077-33.792-76.603077-75.539692-76.603077z m416.768-294.990769c-27.805538 0-50.333538-22.843077-50.333539-51.042462 0-28.199385 22.528-51.042462 50.333539-51.042461 27.844923 0 50.412308 22.843077 50.372923 51.042461 0 28.199385-22.567385 51.081846-50.372923 51.081847zM201.452308 524.8c0-56.398769-45.095385-102.124308-100.745846-102.124308C45.095385 422.596923 0 468.283077 0 524.760615c0 56.398769 45.095385 102.124308 100.706462 102.124308 55.650462 0 100.745846-45.686154 100.745846-102.124308z"  ></path></symbol><symbol id="icon-loading" viewBox="0 0 1024 1024"><path d="M563.2 819.2a102.4 102.4 0 1 1 0 204.8 102.4 102.4 0 0 1 0-204.8z m-320.4608-153.6a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m592.7936 25.6a102.4 102.4 0 1 1 0 204.8 102.4 102.4 0 0 1 0-204.8zM947.2 477.1328a76.8 76.8 0 1 1 0 153.6 76.8 76.8 0 0 1 0-153.6zM128 307.2a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m782.6432-40.6016a51.2 51.2 0 1 1 0 102.4 51.2 51.2 0 0 1 0-102.4zM409.6 0a153.6 153.6 0 1 1 0 307.2 153.6 153.6 0 0 1 0-307.2z m384 153.6a25.6 25.6 0 1 1 0 51.2 25.6 25.6 0 0 1 0-51.2z" fill="#555555" ></path></symbol><symbol id="icon-tupushujuyuan" viewBox="0 0 1024 1024"><path d="M851.456 588.288c-13.312 0-25.6 2.048-37.888 5.12l-90.112-155.648 55.296-31.744c18.944 17.92 44.032 29.184 72.192 29.184 57.344 0 103.936-46.592 103.936-103.936s-46.592-103.936-103.936-103.936c-57.344 0-103.936 46.592-103.936 103.936 0 5.12 0.512 10.24 1.536 15.36l-58.368 33.792-82.944-143.872c26.112-25.088 41.984-59.904 41.984-98.816 0-75.776-61.44-137.216-137.216-137.216s-137.216 61.44-137.216 137.216c0 38.912 15.872 73.728 41.984 98.816l-84.992 146.944-56.832-32.768c1.024-6.144 2.048-12.8 2.048-19.456 0-57.344-46.592-103.936-103.936-103.936-57.344 0-103.936 46.592-103.936 103.936s46.592 103.936 103.936 103.936c26.624 0 51.2-10.24 69.12-26.624l56.32 32.768-88.064 152.576c-11.776-3.584-24.576-5.12-37.888-5.12-75.776 0-137.216 61.44-137.216 137.216s61.44 137.216 137.216 137.216c64.512 0 118.272-44.544 133.12-103.936h173.056v61.44c-40.96 13.824-70.656 52.736-70.656 98.816 0 57.344 46.592 103.936 103.936 103.936s103.936-46.592 103.936-103.936c0-46.08-29.696-84.48-70.656-98.816v-61.44h173.056c14.848 59.904 69.12 103.936 133.12 103.936 75.776 0 137.216-61.44 137.216-137.216s-61.44-137.728-137.216-137.728z m-410.112-450.048c0-38.912 31.744-70.656 70.656-70.656s70.656 31.744 70.656 70.656c0 13.824-4.096 26.624-10.752 37.376-12.288 19.456-33.28 32.256-57.856 33.28h-5.12c-24.576-1.024-45.568-13.824-57.856-33.28-6.144-10.752-9.728-24.064-9.728-37.376z m32.768 132.096c11.776 3.584 24.576 5.12 37.888 5.12s25.6-2.048 37.888-5.12l82.944 143.872-124.416 72.192-118.784-68.608 84.48-147.456z m-301.568 526.336c-38.912 0-70.656-31.744-70.656-70.656 0-38.912 31.744-70.656 70.656-70.656h2.56c24.576 1.024 45.568 13.824 57.856 33.28 1.024 1.536 1.536 2.56 2.56 4.096 5.12 9.728 8.192 20.992 8.192 33.28 0 11.776-3.072 23.552-8.192 33.28-12.288 22.016-35.84 37.376-62.976 37.376z m133.12-103.936c-6.144-25.6-19.456-48.128-37.888-65.536l88.064-152.576 122.88 70.656v146.944h-173.056z m239.616-151.552l120.832-69.632 90.112 155.648c-18.432 17.408-31.744 39.936-37.888 65.536h-173.056v-151.552z m306.176 255.488c-27.136 0-50.688-15.36-62.464-37.376-5.12-9.728-8.192-21.504-8.192-33.28 0-12.288 3.072-23.552 8.192-33.28 0.512-1.536 1.536-3.072 2.56-4.096 12.288-19.456 33.28-32.768 57.856-33.28h2.56c38.912 0 70.656 31.744 70.656 70.656-0.512 38.912-32.256 70.656-71.168 70.656z"  ></path></symbol><symbol id="icon-jiedian" viewBox="0 0 1024 1024"><path d="M882.1914 744.849921c-60.501005 0-112.097749 38.645092-131.425292 92.560342H244.912146c-80.468136 0-145.955927-62.61964-145.955926-139.570043 0-77.000371 65.487791-139.570043 145.955926-139.570043h136.312143c19.497433 53.585462 70.934281 91.950735 131.205434 91.950735 60.241173 0 111.688014-38.375266 131.205434-91.950735h136.452052C914.210763 558.280171 1023.340425 453.92743 1023.340425 325.660102S914.210763 93.040033 780.077216 93.040033H273.093982c-19.197627-54.165089-70.944274-93.040033-131.595182-93.040033C64.508422 0 1.928757 62.569672 1.928757 139.560049c0 76.950403 62.579665 139.570043 139.570043 139.570043 60.640915 0 112.377569-38.894931 131.585189-93.040033h506.993227c80.468136 0 145.955927 62.61964 145.955927 139.570043 0 77.000371-65.487791 139.570043-145.955927 139.570043H644.414655c-18.887826-54.734722-70.924287-94.139324-131.974938-94.139325-61.090625 0-113.097105 39.394609-131.974938 94.139325H244.912146c-134.133547 0-243.263209 104.352741-243.263209 232.620069 0 128.267328 109.129663 232.620069 243.263209 232.620069h505.524174c19.057717 54.394941 70.9043 93.529717 131.75508 93.529717 76.950403 0 139.570043-62.61964 139.570043-139.570043 0.009994-77.000371-62.61964-139.580036-139.570043-139.580036zM141.428845 207.036558c-37.166045 0-67.376574-30.230515-67.376574-67.376573 0-37.166045 30.210528-67.376574 67.376574-67.376574 37.146058 0 67.376574 30.210528 67.376573 67.376574 0 37.146058-30.230515 67.376574-67.376573 67.376573z m371.000878 236.257725c37.146058 0 67.376574 30.210528 67.376574 67.376574 0 37.146058-30.230515 67.376574-67.376574 67.376573-37.166045 0-67.376574-30.230515-67.376574-67.376573 0.009994-37.176039 30.210528-67.376574 67.376574-67.376574z m369.761677 508.502254c-37.166045 0-67.376574-30.230515-67.376574-67.376573 0-37.166045 30.210528-67.376574 67.376574-67.376574 37.146058 0 67.376574 30.210528 67.376574 67.376574 0 37.146058-30.230515 67.376574-67.376574 67.376573z"  ></path></symbol><symbol id="icon-shitujiedianxianshi" viewBox="0 0 1367 1024"><path d="M1235.403267 512.03593a130.596433 130.596433 0 0 0-42.68749 7.796802l-193.295715-290.430872A149.113837 149.113837 0 1 0 724.647767 149.48464a151.777744 151.777744 0 0 0 37.229729 97.849864l-194.920048 357.873209a220.519548 220.519548 0 0 0-55.162374-8.511508 207.914718 207.914718 0 0 0-114.807909 34.046035L240.401393 443.683967a126.763005 126.763005 0 0 0-75.564005-182.380192 127.737605 127.737605 0 1 0 12.99467 239.816633l157.625345 188.422713A213.307506 213.307506 0 1 0 643.23616 643.282096l190.956674-350.856087a164.187654 164.187654 0 0 0 39.56877 6.172468 143.591102 143.591102 0 0 0 60.555162-12.99467l192.516034 288.026859a121.760057 121.760057 0 0 0-18.582377 64.973349 128.127445 128.127445 0 1 0 127.152844-126.568085zM129.621832 448.362048a68.157044 68.157044 0 1 1 68.157044-68.092071A68.157044 68.157044 0 0 1 129.621832 448.362048z m528.948039 365.670011a145.86517 145.86517 0 1 1-145.86517-145.86517 145.86517 145.86517 0 0 1 145.86517 145.86517z m215.12676-577.937944a87.389155 87.389155 0 1 1 87.389155-87.389155 87.389155 87.389155 0 0 1-87.389155 87.389155z m365.085251 474.305451a68.157044 68.157044 0 1 1 68.222017-68.416937 68.157044 68.157044 0 0 1-68.222017 68.157044z"  ></path></symbol><symbol id="icon-shituxianshiquanbujiedian" viewBox="0 0 1367 1024"><path d="M1235.403267 512.03593a130.596433 130.596433 0 0 0-42.68749 7.796802l-193.295715-290.430872A149.113837 149.113837 0 1 0 724.647767 149.48464a151.777744 151.777744 0 0 0 37.229729 97.849864l-194.920048 357.873209a220.519548 220.519548 0 0 0-55.162374-8.511508 207.914718 207.914718 0 0 0-114.807909 34.046035L240.401393 443.683967a126.763005 126.763005 0 0 0-75.564005-182.380192 127.737605 127.737605 0 1 0 12.99467 239.816633l157.625345 188.422713A213.307506 213.307506 0 1 0 643.23616 643.282096l190.956674-350.856087a164.187654 164.187654 0 0 0 39.56877 6.172468 143.591102 143.591102 0 0 0 60.555162-12.99467l192.516034 288.026859a121.760057 121.760057 0 0 0-18.582377 64.973349 128.127445 128.127445 0 1 0 127.152844-126.568085zM129.621832 448.362048a68.157044 68.157044 0 1 1 68.157044-68.092071A68.157044 68.157044 0 0 1 129.621832 448.362048z m528.948039 365.670011a145.86517 145.86517 0 1 1-145.86517-145.86517 145.86517 145.86517 0 0 1 145.86517 145.86517z m215.12676-577.937944a87.389155 87.389155 0 1 1 87.389155-87.389155 87.389155 87.389155 0 0 1-87.389155 87.389155z m365.085251 474.305451a68.157044 68.157044 0 1 1 68.222017-68.416937 68.157044 68.157044 0 0 1-68.222017 68.157044z"  ></path></symbol><symbol id="icon-suoxiao" viewBox="0 0 1024 1024"><path d="M768 448a320 320 0 1 0-320 320 320 320 0 0 0 320-320z m64 0A384 384 0 1 1 448 64a384 384 0 0 1 384 384z"  ></path><path d="M681.28 726.72a32 32 0 0 1 45.44-45.44l160 160a32 32 0 0 1-45.44 45.44zM288 480a32 32 0 0 1 0-64h320a32 32 0 0 1 0 64z"  ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1024 1024"><path d="M922.243 97.755c11.49 11.489 11.673 30.002 0.547 41.713l-0.547 0.562-109.119 109.1c57.22 78.348 42.673 195.388-35.778 273.839l-92.83 92.585c-11.572 11.54-30.264 11.653-41.97 0.253l-45.746-44.55-18.089 18.086a29.891 29.891 0 0 1-7.171 5.3l48.764 47.489c11.947 11.638 12.06 30.804 0.248 42.585l-95.875 95.629c-77.416 77.417-192.412 92.603-270.72 38.004L144.04 928.245c-11.676 11.673-30.606 11.673-42.282 0-11.49-11.489-11.673-30.002-0.547-41.713l0.547-0.562 109.677-109.657c-55.981-78.335-41.131-194.413 36.833-272.377l92.831-92.585c11.571-11.54 30.263-11.653 41.969-0.254l42.587 41.474a29.935 29.935 0 0 1 3.678-4.741l0.548-0.562 19.54-19.538-44.11-42.957c-11.828-11.522-12.057-30.422-0.6-42.23l0.351-0.355 95.875-95.63c76.927-76.926 190.96-92.408 269.23-39.03L879.961 97.755c11.676-11.673 30.606-11.673 42.282 0zM362.451 474.49l-71.916 71.727-1.884 1.911c-61.822 63.545-67.916 156.289-16.185 208.02C324.72 808.4 418.82 801.655 482.43 738.044l74.422-74.234-194.401-189.32z m129.807-5.04l-20.096 20.094a30.035 30.035 0 0 1-4.643 3.8l63.25 61.595a29.82 29.82 0 0 1 5.113-7.308l0.547-0.561 17.532-17.531-61.703-60.089z m260.889-198.691c-52.254-52.254-146.353-45.509-209.964 18.102l-74.422 74.234 194.4 189.322 71.939-71.75 1.862-1.888c61.822-63.545 67.916-156.29 16.185-208.02z" fill="#333333" ></path></symbol><symbol id="icon-xiantiao" viewBox="0 0 1024 1024"><path d="M827.076923 157.538462a39.384615 39.384615 0 1 1-14.375385 76.051692L233.590154 812.701538a39.384615 39.384615 0 1 1-22.291692-22.291692L790.409846 211.298462A39.384615 39.384615 0 0 1 827.076923 157.538462z" fill="#333333" ></path></symbol></svg>', r = (r = document.getElementsByTagName("script"))[r.length - 1].getAttribute("data-injectcss");
  if (r && !n.__iconfont__svg__cssinject__) {
    n.__iconfont__svg__cssinject__ = !0;
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (u) {
      console && console.log(u);
    }
  }
  function c() {
    i || (i = !0, o());
  }
  e = function() {
    var u, d, h, w;
    (w = document.createElement("div")).innerHTML = l, l = null, (h = w.getElementsByTagName("svg")[0]) && (h.setAttribute("aria-hidden", "true"), h.style.position = "absolute", h.style.width = 0, h.style.height = 0, h.style.overflow = "hidden", u = h, (d = document.body).firstChild ? (w = u, (h = d.firstChild).parentNode.insertBefore(w, h)) : d.appendChild(u));
  }, document.addEventListener ? ~["complete", "loaded", "interactive"].indexOf(document.readyState) ? setTimeout(e, 0) : (t = function() {
    document.removeEventListener("DOMContentLoaded", t, !1), e();
  }, document.addEventListener("DOMContentLoaded", t, !1)) : document.attachEvent && (o = e, s = n.document, i = !1, (a = function() {
    try {
      s.documentElement.doScroll("left");
    } catch {
      return void setTimeout(a, 50);
    }
    c();
  })(), s.onreadystatechange = function() {
    s.readyState == "complete" && (s.onreadystatechange = null, c());
  });
}(window);
const Ge = We, Ce = "2.0.26", j = Symbol(), Ve = () => window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width, Re = () => window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height, Te = (n) => {
  if (!n)
    return 0;
  let e = 0;
  for (const t of n) {
    const o = t.charCodeAt(0);
    o < 0 || o > 255 ? e += 2 : e++;
  }
  return e;
};
let ie = !1;
const Oe = () => {
  try {
    document.createEvent("TouchEvent"), ie = !0;
  } catch {
  }
};
Oe();
const _ = (...n) => {
  typeof window < "u" && window.relationGraphDebug && console.log("[relation-graph:debug]", ...n);
}, je = () => {
  console.log(
    `%c relation-graph/vue3 %c Version v${Ce} %c More info: https://github.com/seeksdream/relation-graph %c`,
    "background:#35495e ; padding: 1px; border-radius: 3px 0 0 3px;  color: #fff",
    "background:#41b883 ; padding: 1px; border-radius: 0 3px 3px 0;  color: #fff",
    "background:#fff ; padding: 1px; border-radius: 0 3px 3px 0;  color: #41b883",
    "background:transparent"
  ), Fe || console.error(
    "[relation-graph]Please introduce component screenfull, for example:https://cdnjs.cloudflare.com/ajax/libs/screenfull.js/5.1.0/screenfull.min.js"
  ), De || console.error(
    "[relation-graph]Please introduce component html2canvas, for example:https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"
  );
}, ye = 0, U = {
  getRectPoint(n, e, t, o, s, i, a, l) {
    const r = n + s / 2, c = e + i / 2, u = t + a / 2, d = o + l / 2, h = r < u ? 1 : -1, w = c < d ? 1 : -1;
    if (d === c)
      return { x: r + h * s / 2, y: c };
    const b = Math.abs((u - r) / (d - c)), y = s / i;
    let m = 0, v = 0;
    return b < y ? (m = h * i / 2 * b, v = w * i / 2) : (m = h * s / 2, v = w * s / 2 / b), { x: r + m, y: c + v };
  },
  getRectPointBasic(n, e, t, o, s, i, a, l) {
    const r = n + s / 2, c = e + i / 2, u = t + a / 2, d = o + l / 2;
    let h = d === c ? 0 : (u - r) / (d - c);
    h === 0 && (h = (u - r) / (d - c + 1));
    const w = s / l;
    let b = 0, y = 0, m = "1";
    return -1 * w < h && h < w ? (m = "2", c < d ? (b = i / 2 * h, y = i / 2) : (b = -1 * i / 2 * h, y = -1 * i / 2)) : (r < u ? (b = 1 * s / 2, y = 1 * s / 2 / h) : (b = -1 * s / 2, y = -1 * s / 2 / h), m = "3"), { x: r + b, y: c + y, _case: m };
  },
  getRectJoinPoint(n, e, t, o, s, i, a, l) {
    const r = n + s / 2, c = e + i / 2, u = t + a / 2, d = o + l / 2, h = Math.round(
      Math.atan2(d - c, u - r) * 180 / 3.14
    ) + 135;
    return h >= 0 && h < 90 ? { x: n + s / 2, y: e - 5 } : h >= 90 && h < 180 ? { x: n + s + 5, y: e + i / 2 } : h >= 180 && h < 270 ? { x: n + s / 2, y: e + i + 5 } : { x: n - 5, y: e + i / 2 };
  },
  getRectHJoinPoint(n, e, t, o, s, i, a) {
    const l = i / 2;
    return n + s < t ? { x: n + s + 5, y: e + l } : n + s < t + a ? { x: n - 5, y: e + l } : { x: n - 5, y: e + l };
  },
  getRectVJoinPoint(n, e, t, o, s, i, a, l) {
    const r = s / 2;
    return e + i < o ? { y: e + i + 5, x: n + r } : e + i < o + l ? { y: e - 5, x: n + r } : { y: e - 5, x: n + r };
  },
  getBorderPoint(n, e, t, o, s, i, a, l, r) {
    return r === 0 ? this.getCirclePoint(n, e, t, o, s, i, a, l) : this.getRectPoint(n, e, t, o, s, i, a, l);
  },
  getBorderPoint4MultiLine(n, e, t, o, s, i, a, l, r, c, u, d) {
    return r === 0 ? this.getCirclePoint4MultiLine(
      n,
      e,
      t,
      o,
      s,
      i,
      a,
      l,
      c,
      u,
      d
    ) : this.getRectPoint(n, e, t, o, s, i, a, l);
  },
  getCirclePoint(n, e, t, o, s, i, a, l) {
    const r = t + a / 2, c = o + l / 2, u = n + s / 2, d = e + i / 2, h = r - u;
    if (h === 0)
      return { x: u, y: d - i / 2 * (c < d ? 1 : -1) };
    const b = (c - d) / h, y = Math.sqrt(1 / (1 / (s / 2) ** 2 + b ** 2 / (i / 2) ** 2)) * (r < u ? 1 : -1), m = b * y;
    return { x: u - y, y: d - m };
  },
  getCirclePoint4MultiLine(n, e, t, o, s, i, a, l, r, c, u) {
    r && (u = c - u - 1);
    const d = t + a / 2, h = o + l / 2, w = n + s / 2, b = e + i / 2, y = d - w;
    if (y === 0)
      return { x: w, y: b - i / 2 * (h < b ? 1 : -1) };
    const m = 40 / (c + 1) * (u + 1) - 20, v = h - b, S = Math.sqrt(y ** 2 + v ** 2) * m / y, z = v / y, C = s / 2, H = i / 2, k = d < w ? 1 : -1, P = (-1 * C ** 2 * z * S + C * H * Math.sqrt(H ** 2 + z ** 2 * C ** 2 - S ** 2) / k) / (H ** 2 + C ** 2 * z ** 2), se = z * P + S;
    return { x: w - P, y: b - se };
  },
  getCirclePointBasic(n, e, t, o, s, i, a, l, r) {
    const c = n + s / 2, u = e + i / 2, d = t + a / 2, h = o + l / 2, w = d - c, b = h - u, y = Math.sqrt(w * w + b * b), m = y - r, v = m * w / y * -1, S = m * b / y * -1;
    return { x: d + v, y: h + S };
  },
  getCirclePointPlus(n, e, t, o, s, i, a, l) {
    const r = n + s / 2, c = e + i / 2, u = t + a / 2, d = o + l / 2, h = u - r, w = d - c, b = Math.sqrt(h * h + w * w), y = (b - s / 2) * h / b * -1, m = (b - i / 2) * w / b * -1;
    return { x: u + y, y: d + m };
  },
  getOvalPoint(n, e, t, o, s) {
    return {
      x: n + t * Math.sin(
        (ye + o * (360 / s) + 0) * Math.PI / 180
      ),
      y: e + t * Math.cos(
        (ye + o * (360 / s) + 0) * Math.PI / 180
      ) * -1
    };
  },
  getAngleType(n, e) {
    if (n >= 0 && e >= 0)
      return 1;
    if (n < 0 && e >= 0)
      return 2;
    if (n < 0 && e < 0)
      return 3;
    if (n >= 0 && e < 0)
      return 4;
  },
  getTextAngle(n, e, t, o) {
    let s = Math.atan(Math.abs((o - e) / (t - n))) * 180 / Math.PI;
    return t > n && o > e || (t > n && o < e ? s = -s : t < n && o > e ? s = 180 - s : s = s - 180), Math.abs(s) > 90 && (s = s + 180), Math.round(s);
  },
  getTreePointFromTop(n, e, t, o, s, i) {
    return n ? {
      x: n - 300 + Math.max(600 / ((s === 1 ? 2 : s) - 1), 80) * o,
      y: e + t
    } : {
      x: (i.canvas_width - i.node_width) / 2,
      y: (i.canvas_height - i.node_height) / 2 - 200
    };
  },
  getTreePointFromRight(n, e, t, o, s, i) {
    return n ? {
      x: n - t,
      y: e - 200 + Math.max(400 / ((s === 1 ? 2 : s) - 1), 80) * o
    } : {
      x: (i.canvas_width - i.node_width) / 2 + 300,
      y: (i.canvas_height - i.node_height) / 2
    };
  },
  getTreePointFromBottom(n, e, t, o, s, i) {
    return n ? {
      x: n - 300 + Math.max(600 / ((s === 1 ? 2 : s) - 1), 80) * o,
      y: e - t
    } : {
      x: (i.canvas_width - i.node_width) / 2,
      y: (i.canvas_height - i.node_height) / 2 + 200
    };
  },
  getTreePointFromLeft(n, e, t, o, s, i) {
    return n ? {
      x: n + t,
      y: e - 200 + Math.max(400 / ((s === 1 ? 2 : s) - 1), 80) * o
    } : {
      x: (i.canvas_width - i.node_width) / 2 - 300,
      y: (i.canvas_height - i.node_height) / 2
    };
  },
  analysisNodes(n, e, t, o) {
    e.length > o.max_length && (o.max_length = e.length), t > o.max_deep && (o.max_deep = t);
    const s = {
      level: t,
      all_size: e.length,
      all_strength: 0
    }, i = [];
    e.forEach((l) => {
      l.lot || (l.lot = { childs: [] }), l.lot.eached = !0, l.lot.subling = s, l.lot.level = t, n.push(l);
    });
    let a = 0;
    e.forEach((l) => {
      let r = 0;
      if (l.targetNodes) {
        let c = 0;
        l.targetNodes.forEach((u) => {
          u.lot || (u.lot = { childs: [], eached: !1 }), u.lot.eached || (U.isAllowShowNode(u) ? (u.lot.eached = !0, u.lot.parent = l, u.lot.index_of_parent = c++, l.lot.childs.push(u), i.push(u), r++) : l.lot.childs.push(u));
        });
      }
      l.lot.strength = r > 0 ? r : 1, s.all_strength += l.lot.strength, l.lot.strength_plus = s.all_strength, l.lot.index_of_level = a, l.lot.childs_size = r, a++;
    }), s.all_strength > o.max_strength && (o.max_strength = s.all_strength), i.length > 0 ? this.analysisNodes(
      n,
      i,
      t + 1,
      o
    ) : (n.forEach((l) => {
      l.lot.childs_size && l.lot.childs_size > 0 && (l.lot.strengthWithChilds = 0);
    }), n.forEach((l) => {
      l.lot.childs_size === 0 && (l.lot.strengthWithChilds = 1, this.conductStrengthToParents(l));
    }), this.analysisDataTree([n[0]], 0));
  },
  analysisNodes4Didirectional(n, e, t, o, s) {
    e.length > o.max_length && (o.max_length = e.length), t > o.max_deep && (o.max_deep = t);
    const i = {
      level: t,
      all_size: e.length,
      all_strength: 0
    }, a = [];
    e.forEach((r) => {
      r.lot || (r.lot = { childs: [] }), r.lot.eached = !0, r.lot.subling = i, r.lot.level = t, n.push(r);
    });
    let l = 0;
    e.forEach((r) => {
      let c = 0;
      if (s === 0) {
        let u = 0;
        r.targetNodes.forEach((d) => {
          d.lot || (d.lot = { childs: [], eached: !1 }), d.lot.eached || (U.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = r, d.lot.index_of_parent = u++, r.lot.childs.push(d), a.push(d), c++) : r.lot.childs.push(d));
        });
      } else if (s === -1) {
        let u = 0;
        r.targetFrom.forEach((d) => {
          d.lot || (d.lot = { childs: [], eached: !1 }), d.lot.eached || (U.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = r, d.lot.index_of_parent = u++, r.lot.childs.push(d), a.push(d), c++) : r.lot.childs.push(d));
        });
      } else {
        let u = 0;
        r.targetTo.forEach((d) => {
          d.lot || (d.lot = { childs: [], eached: !1 }), d.lot.eached || (U.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = r, d.lot.index_of_parent = u++, r.lot.childs.push(d), a.push(d), c++) : r.lot.childs.push(d));
        });
      }
      r.lot.strength = c > 0 ? c : 1, i.all_strength += r.lot.strength, r.lot.strength_plus = i.all_strength, r.lot.index_of_level = l, r.lot.childs_size = c, l++;
    }), i.all_strength > o.max_strength && (o.max_strength = i.all_strength), a.length > 0 ? U.analysisNodes4Didirectional(
      n,
      a,
      t + (s === -1 ? -1 : 1),
      o,
      s
    ) : (n.forEach((r) => {
      r.lot.childs_size && r.lot.childs_size > 0 && (r.lot.strengthWithChilds = 0);
    }), n.forEach((r) => {
      r.lot.childs_size === 0 && (r.lot.strengthWithChilds = 1, U.conductStrengthToParents(r));
    }), U.analysisDataTree([n[0]], 0, s));
  },
  conductStrengthToParents(n) {
    n.lot.parent && (n.lot.parent.lot.strengthWithChilds === void 0 && (n.lot.parent.lot.strengthWithChilds = 0), n.lot.parent.lot.strengthWithChilds += 1, this.conductStrengthToParents(n.lot.parent));
  },
  analysisDataTree(n, e, t) {
    t === void 0 && (t = 1);
    const o = [];
    let s = 0;
    n.forEach((i) => {
      (i.lot.level === 0 || t === (i.lot.level && i.lot.level < 0 ? -1 : 1)) && (i.lot.childs_size && i.lot.childs_size > 0 && i.lot.childs.forEach((a) => {
        o.push(a);
      }), i.lot.parent && i.lot.parent.lot.strengthWithChilds_from && s < i.lot.parent.lot.strengthWithChilds_from && (s = i.lot.parent.lot.strengthWithChilds_from), i.lot.strengthWithChilds_from = s, s += i.lot.strengthWithChilds || 0);
    }), o.length > 0 && this.analysisDataTree(o, e + t, t);
  },
  isAllowShowNode(n, e = 0) {
    return n.isShow !== !1 && n.isHide !== !0 && (!n.lot.parent || this.isAllowShowNode(n.lot.parent, e + 1) === !0);
  }
}, Je = (n, e, t, o) => {
  const s = n - t, i = e - o, a = s ** 2, l = i ** 2, r = a + l;
  return Math.sqrt(r);
}, N = U, Ze = (n) => {
  if (n.from === void 0)
    throw new Error(
      `error,line must has option[from]:${JSON.stringify(n)}`
    );
  if (n.to === void 0)
    throw new Error(
      `error,line must has option[to]:${JSON.stringify(n)}`
    );
  if (typeof n.from != "string")
    throw new TypeError(
      `error line from, must be string:${JSON.stringify(n)}`
    );
  if (typeof n.to != "string")
    throw new TypeError(
      `error line to, must be string:${JSON.stringify(n)}`
    );
  const e = {
    seeks_id: "",
    isReverse: !1,
    from: n.from,
    to: n.to,
    text: n.text !== void 0 ? n.text : "",
    color: n.color !== void 0 ? n.color : void 0,
    opacity: n.opacity !== void 0 ? n.opacity : 1,
    fontColor: n.fontColor !== void 0 ? n.fontColor : void 0,
    lineWidth: n.lineWidth !== void 0 ? n.lineWidth : void 0,
    lineShape: n.lineShape !== void 0 ? n.lineShape : void 0,
    styleClass: n.styleClass !== void 0 ? n.styleClass : void 0,
    isHide: n.isHide !== void 0 ? n.isHide : !1,
    arrow: n.arrow !== void 0 ? n.arrow : void 0,
    showStartArrow: n.showStartArrow !== void 0 ? n.showStartArrow : !1,
    disableDefaultClickEffect: n.disableDefaultClickEffect !== void 0 ? n.disableDefaultClickEffect : !1,
    showEndArrow: n.showEndArrow !== void 0 ? n.showEndArrow : !0,
    useTextPath: n.useTextPath !== void 0 ? n.useTextPath : !1,
    isHideArrow: n.isHideArrow !== void 0 ? n.isHideArrow : void 0,
    lineDirection: n.lineDirection !== void 0 ? n.lineDirection : void 0,
    data: n.data !== void 0 ? n.data : {}
  };
  return e.isHideArrow && (e.showEndArrow = !1, e.isHideArrow = !1), e;
}, Ye = ["arrow", "id", "reverseText", "isReverse"], Xe = (n, e) => {
  !n || n.relations.forEach((t) => {
    const o = {};
    Object.keys(t).forEach((s) => {
      Ye.includes(s) || t[s] !== void 0 && (o[s] = t[s]);
    }), e.push(o);
  });
}, le = {
  border: "border",
  ltrb: "ltrb",
  tb: "tb",
  lr: "lr"
};
class Ue {
  constructor(e, t) {
    L(this, "graphOptions");
    L(this, "layoutOptions");
    L(this, "rootNode");
    L(this, "allNodes", []);
    L(this, "__origin_nodes", []);
    L(this, "layoutTimes", 0);
    L(this, "maxLayoutTimes", 300);
    L(this, "justLayoutSingleNode", !1);
    L(this, "byNode", !0);
    L(this, "byLine", !0);
    this.layoutOptions = e, this.graphOptions = t;
  }
  refresh() {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  placeNodes(e, t) {
    if (!t) {
      _("root is null:", t);
      return;
    }
    _("layout by root:", t), this.__origin_nodes = e, this.rootNode = t;
    let o = 0;
    this.__origin_nodes.forEach((s) => {
      s.lot.placed && o++;
    }), this.analysisNodes(), o === 0 ? this.initNodesPosition() : this.__origin_nodes.forEach((s) => {
      s.fixed !== !0 && (s.lot.placed || (s.x || (s.x = Math.floor(Math.random() * 200) - 100), s.x || (s.y = Math.floor(Math.random() * 200) - 100), s.lot.placed = !0));
    }), _("Start Auto Layout....."), this.autoLayout(!0);
  }
  analysisNodes() {
    this.__origin_nodes.forEach((t) => {
      t.lot.eached = !1, t.lot.notLeafNode = !1, t.lot.childs = [], t.lot.index_of_parent = 0, t.lot.strength = 0, t.lot.placed = !1;
    }), this.allNodes = [];
    const e = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    N.analysisNodes4Didirectional(
      this.allNodes,
      [this.rootNode],
      0,
      e,
      0
    );
  }
  initNodesPosition() {
    const e = this.rootNode;
    e.lot.x = -(e.el.offsetWidth || e.width || 60) / 2, e.lot.y = -(e.el.offsetHeight || e.height || 60) / 2, _("root position:", e.lot.x, e.lot.y), _(
      "[layout canvasOffset]",
      this.graphOptions.viewSize,
      this.graphOptions.canvasSize
    ), this.placeRelativePosition(this.rootNode, {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    }), this.__origin_nodes.forEach((t) => {
      t.fixed !== !0 && (!N.isAllowShowNode(t) || (t.x = t.lot.x || 50, t.y = t.lot.y || 50, t.lot.placed = !0));
    });
  }
  placeRelativePosition(e, t) {
    let o = 80;
    this.allNodes.forEach((s) => {
      if (s.lot.subling && s.lot.subling.level === 1) {
        o = s.lot.subling.all_size * 20 / Math.PI / 2, o < 80 && (o = 80);
        const i = N.getOvalPoint(
          e.lot.x,
          e.lot.y,
          s.lot.subling.level * o,
          s.lot.strength_plus - s.lot.strength / 2,
          s.lot.subling.all_strength
        );
        s.lot.x = i.x, s.lot.y = i.y;
      }
    }), this.allNodes.forEach((s) => {
      if (s.lot.subling && s.lot.subling.level > 1 && s.lot.parent) {
        const i = s.lot.parent.lot.strength_plus - s.lot.parent.lot.strength, l = (s.lot.parent.lot.strength_plus - i) / (s.lot.parent.lot.childs_size + 1) * (s.lot.index_of_parent + 1), r = N.getOvalPoint(
          e.lot.x,
          e.lot.y,
          (s.lot.subling.level - 1) * 80 + o,
          i + l,
          s.lot.parent.lot.subling.all_strength
        );
        s.lot.x = r.x, s.lot.y = r.y;
      }
    });
  }
  autoLayout(e) {
    if (e && (this.layoutTimes = 0), _("this.layoutTimes:", this.layoutTimes), this.layoutTimes > this.maxLayoutTimes) {
      this.graphOptions.autoLayouting = !1;
      return;
    }
    if (this.graphOptions.autoLayouting = !0, this.layoutTimes++, this.__origin_nodes.forEach((t) => {
      t.Fx = 0, t.Fy = 0;
    }), this.byNode)
      for (const t in this.__origin_nodes) {
        const o = this.__origin_nodes[t];
        if (!(this.justLayoutSingleNode && !o.singleNode) && !o.fixed && o.lot.placed === !0)
          for (const s in this.__origin_nodes) {
            const i = this.__origin_nodes[s];
            i.lot.placed === !0 && t !== s && this.addGravityByNode(o, i);
          }
      }
    if (this.byLine)
      for (const t in this.__origin_nodes)
        this.__origin_nodes[t].fixed || this.__origin_nodes[t].lot.parent && this.addElasticByLine(
          this.__origin_nodes[t].lot.parent,
          this.__origin_nodes[t]
        );
    for (const t in this.__origin_nodes)
      this.applyToNodePosition(this.__origin_nodes[t]);
    window.setTimeout(() => {
      this.autoLayout();
    }, 30);
  }
  stop() {
    this.layoutTimes = 1e3;
  }
  addElasticByLine(e, t) {
    let o = Math.sqrt((e.y - t.y) ** 2 + (e.x - t.x) ** 2);
    o > 1e3 && (o = 1e3);
    const s = o < 30 ? 0 : (o - 30) * 0.05, i = s, a = s, l = (e.x - t.x) / o, r = (e.y - t.y) / o;
    this.addFtoNode(e, l * i * -1, r * i * -1), this.addFtoNode(t, l * a, r * a);
  }
  addGravityByNode(e, t) {
    const o = Math.sqrt(
      (e.y - t.y) ** 2 + (e.x - t.x) ** 2
    ), s = 300;
    let i = o > s ? 0 : (s - o) * 0.03;
    const a = (e.x - t.x) / o, l = (e.y - t.y) / o;
    this.addFtoNode(e, a * i, l * i), this.addFtoNode(t, a * i * -1, l * i * -1);
  }
  getNodeFWeight(e) {
    let t = e.lot.level;
    return t > 7 && (t = 7), t < 0 && (t = 0), (8 - t) / 8;
  }
  addFtoNode(e, t, o) {
    this.justLayoutSingleNode && !e.singleNode || Number.isNaN(t) || Number.isNaN(o) || (t = t / (e.lot.strength || 1), o = o / (e.lot.strength || 1), t > 50 && (t = 50), o > 50 && (o = 50), t < -50 && (t = -50), o < -50 && (o = -50), e.Fx += t, e.Fy += o);
  }
  applyToNodePosition(e) {
    if (e.fixed)
      return;
    const t = Math.round(e.Fx), o = Math.round(e.Fy);
    e.x = e.x + t, e.y = e.y + o, e.Fx = 0, e.Fy = 0;
  }
}
const fe = Ue, ke = (n) => {
  const e = {
    instanceId: "SeeksGraph",
    debug: !0,
    showDebugPanel: !1,
    backgrounImage: "",
    downloadImageFileName: "",
    disableZoom: !1,
    disableDragNode: !1,
    moveToCenterWhenRefresh: !0,
    zoomToFitWhenRefresh: !0,
    useAnimationWhenRefresh: !0,
    defaultFocusRootNode: !0,
    disableNodeClickEffect: !1,
    disableLineClickEffect: !1,
    allowShowZoomMenu: !0,
    allowAutoLayoutIfSupport: !0,
    allowShowRefreshButton: !0,
    allowShowDownloadButton: !0,
    backgrounImageNoRepeat: !1,
    allowShowMiniToolBar: !0,
    allowSwitchLineShape: !1,
    allowSwitchJunctionPoint: !1,
    isMoveByParentNode: !1,
    defaultExpandHolderPosition: "hide",
    defaultNodeColor: "#67C23A",
    checkedLineColor: "#FD8B37",
    defaultNodeFontColor: "#ffffff",
    defaultNodeBorderColor: "#90EE90",
    defaultNodeBorderWidth: 5,
    defaultLineColor: "#dddddd",
    defaultLineWidth: 1,
    defaultLineShape: 1,
    defaultNodeShape: 0,
    defaultNodeWidth: void 0,
    defaultNodeHeight: void 0,
    defaultShowLineLabel: !0,
    hideNodeContentByZoom: !1,
    defaultJunctionPoint: "border",
    disableDragCanvas: !1,
    placeSingleNode: !0,
    lineUseTextPath: !1,
    viewSize: { width: 300, height: 300 },
    viewELSize: { width: 1300, height: 800, left: 0, top: 100 },
    viewNVInfo: { width: 1300, height: 800, x: 0, y: 100 },
    canvasNVInfo: { width: 1300, height: 800, x: 0, y: 100 },
    defaultLineMarker: {
      markerWidth: 12,
      markerHeight: 12,
      refX: 6,
      refY: 6,
      color: void 0,
      data: "M2,2 L10,6 L2,10 L6,6 L2,2"
    },
    allowShowMiniView: !1,
    allowShowSettingPanel: !1,
    allowShowMiniNameFilter: !0,
    fullscreen: !1,
    checkedNodeId: "",
    checkedLineId: "",
    layouts: [],
    layoutLabel: "",
    layoutName: "tree",
    layoutClassName: "",
    layoutDirection: "h",
    autoLayouting: !1,
    layouter: void 0,
    isNeedShowAutoLayoutButton: !1,
    canvasZoom: 100,
    showSingleNode: !0,
    showNodeLabel: !0,
    showNodeShortLabel: !0,
    canvasSize: {
      width: 2e3,
      height: 2e3
    },
    canvasOffset: {
      x: 25,
      y: 27,
      zoom_buff_x: 0,
      zoom_buff_y: 0
    }
  };
  return n.debug === !0 && _("RGOptions:user instance graphSetting:", n), n && Object.keys(n).forEach((o) => {
    const s = n[o];
    if (typeof s == "object") {
      _("RGOptions:user setting object:", o, s);
      const i = e[o];
      if (i)
        if (i && !Array.isArray(i) && s)
          Object.keys(i).forEach((a) => {
            i[a] = s[a];
          });
        else if (Array.isArray(i)) {
          const a = [];
          s.forEach((l) => {
            l && typeof l == "object" ? a.push(JSON.parse(JSON.stringify(l))) : a.push(l);
          }), e[o] = a;
        } else
          e[o] = s;
      else
        _("ignore option:", o);
    } else
      e[o] = s;
  }), (!e.layouts || e.layouts.length === 0) && (e.layouts = [
    {
      label: "\u4E2D\u5FC3",
      layoutName: "center",
      layoutDirection: "v"
    }
  ]), Array.isArray(e.layouts) || (e.layouts = [e.layouts]), e.layouts.forEach((o) => {
    qe(o, e);
  }), e.disableNodeClickEffect && (e.defaultFocusRootNode = !1), e;
}, qe = (n, e) => {
  if (n.layoutName === "SeeksCenterLayouter" || n.layoutName === "center") {
    n.label === void 0 && (n.label = "\u4E2D\u5FC3"), n.layoutClassName === void 0 && (n.layoutClassName = `seeks-layout-${n.layoutName}`), n.layoutDirection === void 0 && (n.layoutDirection = "h"), n.centerOffset_x === void 0 && (n.centerOffset_x = 0), n.centerOffset_y === void 0 && (n.centerOffset_y = 0);
    const t = n;
    t.distance_coefficient === void 0 && (t.distance_coefficient = 1);
  } else if (n.layoutName === "SeeksBidirectionalTreeLayouter" || n.layoutName === "tree") {
    n.label === void 0 && (n.label = "\u6811\u72B6"), n.layoutClassName === void 0 && (n.layoutClassName = `seeks-layout-${n.layoutName}`), n.layoutDirection === void 0 && (n.layoutDirection = "h"), n.centerOffset_x === void 0 && (n.centerOffset_x = 0), n.centerOffset_y === void 0 && (n.centerOffset_y = 0);
    const t = n;
    t.from === void 0 && (t.from = "top"), t.levelDistance === void 0 && (t.levelDistance = ""), t.min_per_width === void 0 && (t.min_per_width = 30), t.max_per_width === void 0 && (t.max_per_width = 200), t.min_per_height === void 0 && (t.min_per_height = 100), t.max_per_height === void 0 && (t.max_per_height = 500), (t.from === "top" || t.from === "bottom") && (t.layoutDirection = "v", e.defaultJunctionPoint = "tb", _("set layoutDirection=v"), _("set defaultJunctionPoint=tb")), (t.from === "left" || t.from === "right") && (e.defaultJunctionPoint = "lr", _("set defaultJunctionPoint=lr"));
  } else
    (n.layoutName === "fixed" || n.layoutName === "force") && (e.moveToCenterWhenRefresh = !1, e.zoomToFitWhenRefresh = !1);
}, Qe = (n) => {
  if (n.id === void 0)
    throw new Error(`Node must has option[id]:${JSON.stringify(n)}`);
  const e = {
    seeks_id: -1,
    id: n.id,
    text: n.text !== void 0 ? n.text : "",
    type: n.type !== void 0 ? n.type : "node",
    isHide: n.isHide !== void 0 ? n.isHide : !1,
    expanded: n.expanded !== void 0 ? n.expanded : !0,
    junctionPoint: n.junctionPoint !== void 0 ? n.junctionPoint : void 0,
    selected: n.selected !== void 0 ? n.selected : !1,
    styleClass: n.styleClass !== void 0 ? n.styleClass : "",
    nodeShape: n.nodeShape !== void 0 ? n.nodeShape : void 0,
    borderWidth: n.borderWidth !== void 0 ? n.borderWidth : void 0,
    borderColor: n.borderColor !== void 0 ? n.borderColor : void 0,
    fontColor: n.fontColor !== void 0 ? n.fontColor : void 0,
    color: n.color !== void 0 ? n.color : void 0,
    opacity: n.opacity !== void 0 ? n.opacity : 1,
    fixed: n.fixed !== void 0 ? n.fixed : !1,
    width: n.width !== void 0 ? n.width : void 0,
    height: n.height !== void 0 ? n.height : void 0,
    x: n.x !== void 0 ? n.x : 0,
    y: n.y !== void 0 ? n.y : 0,
    offset_x: n.offset_x !== void 0 ? n.offset_x : 0,
    offset_y: n.offset_y !== void 0 ? n.offset_y : 0,
    expandHolderPosition: n.expandHolderPosition !== void 0 ? n.expandHolderPosition : void 0,
    innerHTML: n.innerHTML !== void 0 ? n.innerHTML : void 0,
    html: n.html !== void 0 ? n.html : void 0,
    disableDefaultClickEffect: n.disableDefaultClickEffect !== void 0 ? n.disableDefaultClickEffect : void 0,
    disableDrag: n.disableDrag !== void 0 ? n.disableDrag : !1,
    singleNode: !1,
    data: n.data !== void 0 ? n.data : {},
    isShow: !0,
    Fx: 0,
    Fy: 0,
    targetNodes: [],
    targetFrom: [],
    targetTo: [],
    lot: {
      childs: [],
      parent: void 0,
      eached: !1,
      strength: 0
    },
    el: { offsetWidth: 50, offsetHeight: 50 }
  };
  return e.width !== void 0 && (e.el.offsetWidth = e.width), e.height !== void 0 && (e.el.offsetHeight = e.height), e;
}, Ke = [
  "Fx",
  "Fy",
  "appended",
  "el",
  "targetFrom",
  "targetNodes",
  "targetTo",
  "type",
  "lot",
  "seeks_id"
], et = (n) => {
  if (!n)
    return;
  const e = {};
  return Object.keys(n).forEach((t) => {
    Ke.includes(t) || n[t] !== void 0 && (e[t] = n[t]);
  }), e;
};
class tt {
  constructor(e, t) {
    L(this, "levelDistanceArr", []);
    L(this, "graphOptions");
    L(this, "layoutOptions");
    L(this, "rootNode");
    L(this, "allNodes", []);
    L(this, "__origin_nodes", []);
    this.layoutOptions = e, this.graphOptions = t, _("new SeeksBidirectionalTreeLayouter:", this.layoutOptions), this.layoutOptions.from || (this.layoutOptions.from = "left"), this.layoutOptions.levelDistance && typeof this.layoutOptions.levelDistance == "string" && (this.levelDistanceArr = this.layoutOptions.levelDistance.split(",").map((o) => Number.parseInt(o)));
  }
  refresh() {
    _(
      "SeeksBidirectionalTreeLayouter:refresh:nodes:",
      this.__origin_nodes.length
    ), this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  analysisNodes4Didirectional(e, t, o, s, i) {
    t.length > s.max_length && (s.max_length = t.length), o > s.max_deep && (s.max_deep = o);
    const a = {
      level: o,
      all_size: t.length,
      all_strength: 0
    }, l = [];
    t.forEach((c) => {
      c.lot || (c.lot = { childs: [] }), c.lot.eached = !0, c.lot.subling = a, c.lot.level = o, e.push(c);
    });
    let r = 0;
    t.forEach((c) => {
      let u = 0;
      if (i === -1) {
        let d = 0;
        c.targetFrom.forEach((h) => {
          h.lot || (h.lot = { childs: [], eached: !1 }), h.lot.eached || (N.isAllowShowNode(h) ? (h.lot.eached = !0, h.lot.parent = c, h.lot.index_of_parent = d++, c.lot.childs.push(h), l.push(h), u++) : c.lot.childs.push(h));
        });
      } else {
        let d = 0;
        c.targetTo.forEach((h) => {
          h.lot || (h.lot = { childs: [], eached: !1 }), h.lot.eached || (N.isAllowShowNode(h) ? (h.lot.eached = !0, h.lot.parent = c, h.lot.index_of_parent = d++, c.lot.childs.push(h), l.push(h), u++) : c.lot.childs.push(h));
        });
      }
      c.lot.strength = u > 0 ? u : 1, a.all_strength += c.lot.strength, c.lot.strength_plus = a.all_strength, c.lot.index_of_level = r, c.lot.childs_size = u, r++;
    }), a.all_strength > s.max_strength && (s.max_strength = a.all_strength), l.length > 0 ? this.analysisNodes4Didirectional(
      e,
      l,
      o + i,
      s,
      i
    ) : (e.forEach((c) => {
      c.lot.childs_size && c.lot.childs_size > 0 && (c.lot.strengthWithChilds = 0);
    }), e.forEach((c) => {
      c.lot.childs_size === 0 && (c.lot.strengthWithChilds = 1, N.conductStrengthToParents(c));
    }), N.analysisDataTree([e[0]], 0, i));
  }
  placeNodes(e, t) {
    if (_("SeeksBidirectionalTreeLayouter:placeNodes"), t)
      _("layout by root:", t);
    else {
      console.error("root is null");
      return;
    }
    this.__origin_nodes = e, this.rootNode = t, e.forEach((s) => {
      s.lot.eached = !1, s.lot.notLeafNode = !1, s.lot.childs = [], s.lot.index_of_parent = 0, s.lot.strength = 0, s.lot.strengthWithChilds_from = 0, s.lot.strengthWithChilds = 0, s.lot.placed = !1;
    }), this.allNodes = [];
    let o = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    this.analysisNodes4Didirectional(
      this.allNodes,
      [this.rootNode],
      0,
      o,
      -1
    ), this.placeNodesPosition(this.rootNode, this.allNodes, o), this.allNodes = [], o = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    }, this.analysisNodes4Didirectional(
      this.allNodes,
      [this.rootNode],
      0,
      o,
      1
    ), this.placeNodesPosition(this.rootNode, this.allNodes, o);
  }
  placeNodesPosition(e, t, o) {
    if (e.fixed !== !0) {
      const a = this.layoutOptions.centerOffset_x || 0, l = this.layoutOptions.centerOffset_y || 0, r = e.el.offsetWidth || e.width || 60, c = e.el.offsetHeight || e.height || 60;
      e.lot.x = -r / 2 + a, e.lot.y = -c / 2 + l, this.layoutOptions.from === "top" ? e.lot.y -= this.graphOptions.viewSize.height / 2 - c - 100 : this.layoutOptions.from === "bottom" ? e.lot.y += this.graphOptions.viewSize.height / 2 - c - 200 : this.layoutOptions.from === "right" ? e.lot.x += this.graphOptions.viewSize.width / 2 - r - 100 : e.lot.x -= this.graphOptions.viewSize.width / 2 - r - 100, _("graph offset:", a, l), _("create rootNode coordinates:", e.lot.x, e.lot.y), e.x = e.lot.x + 0, e.y = e.lot.y + 0;
    } else
      _("\u56FA\u5B9A\u4F4D\u7F6E\u7684rootNode:", e.text, e.x, e.y), e.origin_x === void 0 && (e.origin_x = e.x, e.origin_y = e.y), e.lot.x = e.origin_x, e.lot.y = e.origin_y, e.x = e.lot.x + 0, e.y = e.lot.y + 0, _("\u56FA\u5B9A\u4F4D\u7F6E\u7684rootNode:", e.text, e.x, e.y);
    e.lot.placed = !0, this.placeRelativePosition(e, o), t.forEach((a) => {
      if (a.fixed === !0) {
        a.lot.placed = !0;
        return;
      }
      if (!N.isAllowShowNode(a))
        return;
      const l = a.offset_x || 0, r = a.offset_y || 0;
      a.x = a.lot.x + l, a.y = a.lot.y + r, a.lot.placed = !0;
    });
  }
  placeRelativePosition(e, t) {
    const o = this.graphOptions.viewSize.width, s = this.graphOptions.viewSize.height;
    if (this.layoutOptions.from === "left" || this.layoutOptions.from === "right") {
      const i = this.layoutOptions.min_per_height || 80, a = this.layoutOptions.max_per_height || 400, l = this.layoutOptions.min_per_width || 430, r = this.layoutOptions.max_per_width || 650;
      let c = Math.round(
        (o - 10) / (t.max_deep + 2)
      );
      c < l && (c = l), c > r && (c = r);
      let u = Math.round(
        s / (t.max_strength + 1)
      );
      u < i && (u = i), u > a && (u = a), this.allNodes.forEach((d) => {
        d.fixed !== !0 && d.lot.placed !== !0 && d !== e && (this.layoutOptions.from === "right" ? d.lot.x = e.lot.x - this.getLevelDistance(
          d,
          d.lot.subling.level,
          c
        ) : d.lot.x = e.lot.x + this.getLevelDistance(
          d,
          d.lot.subling.level,
          c
        ));
      }), this.allNodes.forEach((d) => {
        d.fixed !== !0 && d.lot.level !== 0 && (d.lot.y = e.lot.y + u * (t.max_strength / -2 + d.lot.strengthWithChilds_from + d.lot.strengthWithChilds / 2));
      });
    } else {
      const i = this.layoutOptions.min_per_height || 250, a = this.layoutOptions.max_per_height || 400, l = this.layoutOptions.min_per_width || 250, r = this.layoutOptions.max_per_width || 500;
      let c = Math.round(
        (o - 10) / (t.max_strength + 2)
      );
      c < l && (c = l), c > r && (c = r);
      let u = Math.round(
        (s - 10) / (t.max_deep + 2)
      );
      u < i && (u = i), u > a && (u = a), this.allNodes.forEach((d) => {
        d.fixed !== !0 && d.lot.placed !== !0 && d !== e && (this.layoutOptions.from === "bottom" ? d.lot.y = e.lot.y - this.getLevelDistance(
          d,
          d.lot.subling.level,
          u
        ) : d.lot.y = e.lot.y + this.getLevelDistance(
          d,
          d.lot.subling.level,
          u
        ));
      }), this.allNodes.forEach((d) => {
        d.fixed !== !0 && d.lot.level !== 0 && (d.lot.x = e.lot.x + c * (t.max_strength / -2 + d.lot.strengthWithChilds_from + d.lot.strengthWithChilds / 2));
      });
    }
  }
  getLevelDistance(e, t, o) {
    const s = Math.abs(t);
    if (this.levelDistanceArr && this.levelDistanceArr.length > 0) {
      let i = 0;
      for (let a = 0; a < s; a++) {
        const l = this.levelDistanceArr[a] || 100;
        i += l;
      }
      return t > 0 ? i : i * -1;
    } else
      return t * o;
  }
}
const ot = tt;
class nt extends fe {
  constructor(t, o) {
    super(t, o);
    L(this, "layoutOptions");
    this.layoutOptions = t;
  }
  refresh() {
    _("SeeksCenterLayouter:refresh"), this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  placeNodes(t, o) {
    if (_("SeeksCenterLayouter:placeNodes"), !o) {
      _("root is null:", o);
      return;
    }
    _("layout by root:", o), this.__origin_nodes = t, this.rootNode = o, t.forEach((i) => {
      i.lot.eached = !1, i.lot.notLeafNode = !1, i.lot.childs = [], i.lot.index_of_parent = 0, i.lot.strength = 0, i.lot.placed = !1;
    }), this.allNodes = [];
    const s = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    N.analysisNodes4Didirectional(
      this.allNodes,
      [this.rootNode],
      0,
      s,
      0
    ), o.lot.x = -(o.el.offsetWidth || o.width || 60) / 2, o.lot.y = -(o.el.offsetHeight || o.height || 60) / 2, _("root position:", o.lot.x, o.lot.y), this.placeRelativePosition(this.rootNode, s), this.allNodes.forEach((i) => {
      if (i.fixed === !0 || !N.isAllowShowNode(i))
        return;
      const a = i.offset_x || 0, l = i.offset_y || 0;
      i.x = i.lot.x + a, i.y = i.lot.y + l, i.lot.placed = !0;
    }), _("Start Auto Layout.....");
  }
  placeRelativePosition(t, o) {
    const s = this.layoutOptions.distance_coefficient === void 0 ? 1 : this.layoutOptions.distance_coefficient;
    let i = Math.round(
      (this.graphOptions.viewSize.height + this.graphOptions.viewSize.width) / o.max_deep * 0.2
    ) * s;
    _(
      "analyticResult:",
      o,
      i,
      this.layoutOptions.distance_coefficient
    ), i < 150 * s && (i = 150 * s);
    let a = 0;
    this.allNodes.forEach((r) => {
      if (r.lot.subling && r.lot.subling.level === 1) {
        a = Math.round(
          r.lot.subling.all_size * 50 / Math.PI / 2
        ), a < i && (a = i);
        const c = N.getOvalPoint(
          t.lot.x,
          t.lot.y,
          r.lot.subling.level * a,
          r.lot.strength_plus - r.lot.strength / 2,
          r.lot.subling.all_strength
        );
        r.lot.x = c.x, r.lot.y = c.y;
      }
    });
    const l = Math.round(300 * s);
    this.allNodes.forEach((r) => {
      var c;
      if (r.lot.parent && r.lot.subling && r.lot.subling.level > 1) {
        const u = r.lot.parent.lot.strength_plus - r.lot.parent.lot.strength, h = (r.lot.parent.lot.strength_plus - u) / (r.lot.parent.lot.childs_size + 1) * (r.lot.index_of_parent + 1), w = N.getOvalPoint(
          t.lot.x,
          t.lot.y,
          (r.lot.subling.level - 1) * l + a,
          u + h,
          (c = r.lot.parent.lot.subling) == null ? void 0 : c.all_strength
        );
        r.lot.x = w.x, r.lot.y = w.y;
      }
    });
  }
}
const st = nt;
class it extends fe {
  constructor(t, o) {
    super(t, o);
    L(this, "__max_deep", 1);
    L(this, "__max_length", 1);
  }
  checkMaxDeepAndLength(t, o) {
    t.length > this.__max_length && (this.__max_length = t.length), o > this.__max_deep && (this.__max_deep = o);
    const s = {
      level: o,
      all_size: t.length,
      all_strength: 0
    }, i = [];
    t.forEach((l) => {
      l.lot || (l.lot = { childs: [] }), l.lot.eached = !0, l.lot.subling = s, this.allNodes.push(l);
    });
    let a = 0;
    t.forEach((l) => {
      let r = 0;
      l.targetNodes && (l.targetNodes.forEach((c) => {
        _("child node::", c.type, c.lot.eached), c.lot || (c.lot = { childs: [], eached: !1 }), c.type === "node" && c.targetNodes.length <= 1 ? c.lot.eached || (c.lot.parent = l, c.lot.index_of_p_childs = r, l.lot.childs.push(c), l.lot.eached = !0, i.push(c), r++) : c.lot.notLeafNode = !0;
      }), l.targetNodes.forEach((c) => {
        c.lot.notLeafNode && (c.lot || (c.lot = { childs: [], eached: !1 }), c.lot.eached || (c.lot.parent = l, c.lot.index_of_p_childs = r, l.lot.childs.push(c), l.lot.eached = !0, i.push(c), r++));
      })), l.lot.strength = r > 0 ? r : 1, s.all_strength += l.lot.strength, l.lot.strength_plus = s.all_strength, l.lot.level_index = a, l.lot.childs_size = r, a++;
    }), i.length > 0 && this.checkMaxDeepAndLength(i, o + 1);
  }
  refresh() {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  placeNodes(t, o) {
    if (o)
      _("layout by root:", o);
    else {
      _("root is null:", o);
      return;
    }
    this.__origin_nodes = t, this.rootNode = o, t.forEach((l) => {
      l.lot.eached = !1, l.lot.notLeafNode = !1, l.lot.childs = [], l.lot.parent = void 0, l.lot.index_of_p_childs = 0, l.lot.strength = 0;
    }), this.allNodes = t, _("max before:", this.__max_deep, this.__max_length), _("max after:", this.__max_deep, this.__max_length);
    const s = {
      x: 0,
      y: 0
    }, i = this.allNodes.length;
    let a = i * 90 / Math.PI / 2;
    a < 200 && (a = 200), a > 800 && (a = 800), this.allNodes.forEach((l, r) => {
      const c = N.getOvalPoint(
        s.x,
        s.y,
        a,
        r,
        i
      );
      l.x = c.x, l.y = c.y;
    }), _("Start Auto Layout.....");
  }
}
const at = it;
class lt {
  constructor(e, t) {
    L(this, "graphOptions");
    L(this, "layoutOptions");
    L(this, "rootNode");
    L(this, "allNodes", []);
    L(this, "__origin_nodes", []);
    this.layoutOptions = e, this.graphOptions = t;
  }
  refresh() {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  placeNodes(e, t) {
    if (!t) {
      _("root is null:", t);
      return;
    }
    _("layout by root:", t), this.__origin_nodes = e, this.rootNode = t, e.forEach((s) => {
      s.lot.eached = !1, s.lot.notLeafNode = !1, s.lot.childs = [], s.lot.index_of_parent = 0, s.lot.strength = 0, s.lot.placed = !1;
    }), this.allNodes = [];
    const o = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    N.analysisNodes4Didirectional(
      this.allNodes,
      [this.rootNode],
      0,
      o,
      0
    );
  }
}
const Me = (n, e) => {
  e.layoutClassName = n.layoutClassName, e.layoutLabel = n.label, e.layoutName = n.layoutName, e.layoutDirection = n.layoutDirection, n.useLayoutStyleOptions === !0 && (e.defaultExpandHolderPosition = n.defaultExpandHolderPosition, e.defaultJunctionPoint = n.defaultJunctionPoint, e.defaultNodeColor = n.defaultNodeColor, e.defaultNodeFontColor = n.defaultNodeFontColor, e.defaultNodeBorderColor = n.defaultNodeBorderColor, e.defaultNodeBorderWidth = n.defaultNodeBorderWidth, e.defaultLineColor = n.defaultLineColor, e.defaultLineWidth = n.defaultLineWidth, e.defaultLineShape = n.defaultLineShape, e.defaultNodeShape = n.defaultNodeShape, e.defaultNodeWidth = n.defaultNodeWidth, e.defaultNodeHeight = n.defaultNodeHeight, e.defaultLineMarker = n.defaultLineMarker, e.defaultShowLineLabel = n.defaultShowLineLabel);
  let t;
  return n.layoutName === "SeeksBidirectionalTreeLayouter" || n.layoutName === "tree" ? t = new ot(n, e) : n.layoutName === "SeeksCenterLayouter" || n.layoutName === "center" ? t = new st(n, e) : n.layoutName === "SeeksCircleLayouter" || n.layoutName === "circle" ? t = new at(n, e) : n.layoutName === "SeeksForceLayouter" || n.layoutName === "force" ? t = new fe(n, e) : (n.layoutName === "SeeksFixedLayouter" || n.layoutName === "fixed") && (t = new lt(n, e)), e.isNeedShowAutoLayoutButton = n.allowAutoLayoutIfSupport !== !1 && t.autoLayout !== void 0, t;
}, rt = (n, e) => {
  const t = e.layouter ? e.layouter.__origin_nodes : [], o = e.layouter ? e.layouter.rootNode : void 0;
  let s = n;
  if (typeof n == "string") {
    for (const i in e.layouts)
      if (i === n) {
        s = i;
        break;
      }
  }
  _("[change layout]switchLayout"), e.layouter = Me(s, e), e.layouter && (e.layouter.__origin_nodes = t, e.layouter.rootNode = o);
};
let ct = 0;
class dt {
  constructor(e, t) {
    L(this, "instanceId", "");
    L(this, "options");
    L(this, "listeners");
    this.listeners = t, this.options = ke(e), this.enableDebugLog(this.options.debug), this.instanceId = `RGIns-${ct++}`, this.options.instanceId = this.instanceId, _("new RelationGraph:", this);
  }
  enableDebugLog(e) {
    this.options.debug = e, window && (window.relationGraphDebug = e);
  }
  refreshNVAnalysisInfo() {
    _("[interface]refreshNVAnalysisInfo");
  }
  resetViewSize() {
    _("[interface]resetViewSize");
  }
  doLayout() {
    _("[interface]doLayout");
  }
}
let K = { x: 0, y: 0 };
const ee = { x: 0, y: 0 }, te = { x: 0, y: 0 };
let pe, _e;
const ve = (n) => {
  const e = {
    clientX: 0,
    clientY: 0
  };
  if (ie) {
    const t = n, o = t.touches || t.targetTouches;
    if (!o)
      throw new Error("error targetTouches");
    e.clientX = o[0].clientX, e.clientY = o[0].clientY;
  } else {
    const t = n;
    e.clientX = t.clientX, e.clientY = t.clientY;
  }
  return e;
}, J = {
  startDrag(n, e, t, o) {
    o ? pe = (s, i, a) => {
      const l = s - te.x, r = i - te.y;
      o(
        l,
        r,
        ee,
        te,
        a
      );
    } : pe = (s, i) => {
      K.x = ee.x + (s - te.x), K.y = ee.y + (i - te.y);
    }, _e = t, K = e, ee.x = K.x, ee.y = K.y, _("[canvas]onDragStart...", ie, n);
    try {
      const s = ve(n);
      te.x = s.clientX, te.y = s.clientY, ie ? (n.preventDefault(), document.body.addEventListener("touchmove", J.onNodeMove), document.body.addEventListener("touchend", J.onNodeDragend)) : (document.body.addEventListener("mousemove", J.onNodeMove), document.body.addEventListener("mouseup", J.onNodeDragend));
    } catch (s) {
      console.error(s.message);
    }
  },
  onNodeMove(n) {
    const e = ve(n);
    pe(e.clientX, e.clientY, n);
  },
  onNodeDragend(n) {
    ie ? (document.body.removeEventListener("touchmove", J.onNodeMove), document.body.removeEventListener("touchend", J.onNodeDragend)) : (document.body.removeEventListener("mousemove", J.onNodeMove), document.body.removeEventListener("mouseup", J.onNodeDragend)), _("Node dragend"), _e && _e(
      K.x - ee.x,
      K.y - ee.y,
      n
    );
  },
  getColorId(n) {
    return n = n.replace("#", ""), n = n.replace("(", ""), n = n.replace(")", ""), n = n.replace(/,/, "-"), n;
  }
}, me = J;
class ht extends dt {
  constructor(t, o) {
    super(t, o);
    L(this, "graphData", {
      rootNode: void 0,
      nodes: [],
      links: []
    });
    L(this, "tmpData", {
      nodes_map: {},
      links_map: {}
    });
    L(this, "seeksNodeIdIndex", 0);
    L(this, "allLineColors", []);
    L(this, "userLayouerClass");
  }
  ready() {
    this.initLayouter(), this.resetViewSize(), this.refreshNVAnalysisInfo();
  }
  setOptions(t, o) {
    this.options = ke(t), this.enableDebugLog(this.options.debug), this.options.instanceId = this.instanceId, this.initLayouter(), this.resetViewSize(), this.doLayout(), this.resetViewSize(), o && o(this);
  }
  setLayouter(t) {
    _("setLayouterClass::", t), this.userLayouerClass = t;
  }
  initLayouter() {
    if (this.userLayouerClass)
      _("Use user layouter:", this.userLayouerClass), this.options.layouter = this.userLayouerClass;
    else if (this.options.layouts && this.options.layouts.length > 0) {
      const t = this.options.layouts[0];
      _(
        "[change layout]Create default layouter\uFF1A",
        this.options.layoutName
      ), t.layouter ? this.options.layouter = t.layouter : this.options.layouter = Me(
        t,
        this.options
      );
    } else
      _("\u4F60\u9700\u8981\u8BBE\u7F6Elayouts\u6765\u6307\u5B9A\u5F53\u524D\u56FE\u8C31\u53EF\u4EE5\u4F7F\u7528\u7684\u5E03\u5C40\u5668\uFF01");
    _("Layouter instance:", this.options.layouter);
  }
  setJsonData(t, o, s) {
    arguments.length === 2 && typeof o == "function" && (s = o, o = !0), this.graphData.nodes = [], this.graphData.links = [], this.tmpData.nodes_map = {}, this.tmpData.links_map = {}, this.graphData.rootNode = void 0, _("set jsonData:", t);
    const i = t.rootId;
    this.loadGraphJsonData(t), i && (this.graphData.rootNode = this.tmpData.nodes_map[i]), !this.graphData.rootNode && this.graphData.nodes.length > 0 && (this.graphData.rootNode = this.graphData.nodes[0]), this.applyNewDataToCanvas(), o && (_("resetViewSize:", o), this.resetViewSize()), setTimeout(() => {
      this.doLayout(), s && s(this);
    }, 500);
  }
  applyNewDataToCanvas() {
    if (this.graphData.rootNode)
      this.options.defaultFocusRootNode && this.setCheckedNode(this.graphData.rootNode.id);
    else
      throw new Error("\u6CA1\u6709\u8BBE\u7F6E\u6839\u8282\u70B9[rootId]\uFF01\u4E5F\u65E0\u6CD5\u83B7\u53D6\u6839\u8282\u70B9!");
  }
  appendJsonData(t, o, s) {
    arguments.length === 2 && typeof o == "function" && (s = o, o = !0), _("appendData:", t), this.loadGraphJsonData(t), this.applyNewDataToCanvas(), o && this.doLayout(), s && s(this);
  }
  loadNodes(t) {
    t.forEach((o) => {
      let s = Qe(o), i = !1;
      this.tmpData.nodes_map[s.id] ? s = this.tmpData.nodes_map[s.id] : i = !0, i && (this.tmpData.nodes_map[s.id] = s, this.graphData.nodes.push(s), s.seeks_id = this.seeksNodeIdIndex++);
    });
  }
  loadLines(t) {
    t.forEach((o) => {
      let s = !1, i, a;
      if (typeof o.from == "object" ? i = o.from : i = this.tmpData.nodes_map[o.from], typeof o.to == "object" ? a = o.to : a = this.tmpData.nodes_map[o.to], !i) {
        console.error("\u627E\u4E0D\u5230from:", o);
        return;
      }
      if (!a) {
        console.error("\u627E\u4E0D\u5230to:", o);
        return;
      }
      const l = `${i.seeks_id}-${a.seeks_id}`, r = `${a.seeks_id}-${i.seeks_id}`, c = Ze(o);
      let u, d = !1;
      this.tmpData.links_map[l] ? u = this.tmpData.links_map[l] : this.tmpData.links_map[r] ? (u = this.tmpData.links_map[r], d = !0) : (s = !0, u = {
        seeks_id: l,
        fromNode: i,
        toNode: a,
        appended: !1,
        relations: []
      });
      let h = c.arrow;
      c.isHideArrow || (h = this.getLineArrow(c.color)), i.targetNodes || (i.targetNodes = []), a.targetNodes || (a.targetNodes = []), i.targetNodes.includes(a) || i.targetNodes.push(a), a.targetNodes.includes(i) || a.targetNodes.push(i), i.targetTo.includes(a) || i.targetTo.push(a), a.targetFrom.includes(i) || a.targetFrom.push(i), c.seeks_id = `${u.seeks_id}-${u.relations.length}`, c.isReverse = d, c.arrow = h, u.relations.push(c), s && (this.graphData.links.push(u), this.tmpData.links_map[l] = u, u.appended = !1);
    });
  }
  flatNodeData(t, o, s, i) {
    t.forEach((a) => {
      s.push(a), o && i.push({
        from: o.id,
        to: a.id
      });
      const l = a.children;
      l && l.length > 0 && this.flatNodeData(l, a, s, i);
    });
  }
  loadGraphJsonData(t) {
    if (!t.lines) {
      console.error(
        "[relation-graph] For compatibility with older versionsm, Use jsonData.relations as jsonData.lines, It is recommended that you define your data using"
      );
      return;
    }
    const o = [], s = [];
    this.flatNodeData(t.nodes, null, o, s), t.lines.forEach((i) => {
      s.push(i);
    }), this.loadNodes(o), _("Nodes is initialized"), this.loadLines(s);
  }
  getLineArrow(t, o = !1, s = !1) {
    const i = o ? "start-" : "";
    if (s)
      return `${this.options.instanceId}-${i}arrow-checked`;
    if (t) {
      const a = me.getColorId(t);
      return this.allLineColors.map((l) => l.id).includes(a) || this.allLineColors.push({ id: a, color: t }), `${this.options.instanceId}-${i}arrow-${a}`;
    } else
      return `${this.options.instanceId}-${i}arrow-default`;
  }
  getNodes() {
    return this.graphData.nodes;
  }
  getLinks() {
    return this.graphData.links;
  }
  getGraphJsonData() {
    const t = [], o = [];
    return this.graphData.nodes.forEach((s) => {
      const i = et(s);
      i && t.push(i);
    }), this.graphData.links.forEach((s) => {
      Xe(s, o);
    }), {
      rootId: this.graphData.rootNode ? this.graphData.rootNode.id : "",
      nodes: t,
      lines: o
    };
  }
  getGraphJsonOptions() {
    const t = {}, o = [
      "layouter",
      "autoLayouting",
      "canvasNVInfo",
      "canvasOffset",
      "canvasZoom",
      "fullscreen",
      "instanceId",
      "layoutClassName",
      "layoutDirection",
      "layoutLabel",
      "layoutName",
      "resetViewSize",
      "viewELSize",
      "viewNVInfo",
      "viewSize",
      "canvasSize"
    ];
    return Object.keys(this.options).forEach((s) => {
      o.includes(s) || (t[s] = this.options[s]);
    }), t;
  }
  printGraphJsonData() {
    _("graph options:", JSON.stringify(this.getGraphJsonOptions())), _("graph json data:", JSON.stringify(this.getGraphJsonData()));
  }
  setCheckedNode(t) {
    this.options.checkedNodeId = t;
  }
  setCheckedLine(t) {
    this.options.checkedLineId = t;
  }
  selectNode(t, o) {
    t.selected = o;
  }
  getNodeById(t) {
    for (let o = 0; o < this.graphData.nodes.length; o++)
      if (this.graphData.nodes[o].id === t)
        return this.graphData.nodes[o];
  }
  addNodes(t, o = !1) {
    this.loadNodes(t), o && this.doLayout();
  }
  addLines(t, o = !1) {
    this.loadLines(t), o && this.doLayout();
  }
  removeNodeById(t) {
    let o = 0;
    for (let i = 0; i < this.graphData.links.length; i++) {
      const a = this.graphData.links[i];
      (a.fromNode.id === t || a.toNode.id === t) && (this.graphData.links.splice(i, 1), i--, o++);
    }
    _("\u5220\u9664\u5BF9\u5E94\u7684\u7EBF\u4E2A\u6570\uFF1A", t, o);
    let s = 0;
    for (let i = 0; i < this.graphData.nodes.length; i++)
      if (this.graphData.nodes[i].id === t) {
        const a = this.graphData.nodes[i];
        a.targetNodes.forEach((l) => {
          const r = l.targetNodes.indexOf(a);
          r !== -1 && l.targetNodes.splice(r, 1);
        }), this.graphData.nodes.splice(i, 1), delete this.tmpData.nodes_map[a.id], s++;
        break;
      }
    _("\u5220\u9664\u5BF9\u5E94\u7684\u8282\u70B9\u4E2A\u6570\uFF1A", t, s);
  }
  removeLinkById(t, o) {
    for (let s = 0; s < this.graphData.links.length; s++) {
      const i = this.graphData.links[s];
      (i.fromNode.id === t || i.toNode.id === o) && (this.graphData.links.splice(s, 1), s--);
    }
  }
  setNodePosition(t, o, s) {
    t.x = o, t.y = s;
  }
}
class ut extends ht {
  constructor(t, o) {
    super(t, o);
    L(this, "$dom");
    L(this, "$canvasDom");
  }
  setDom(t) {
    this.$dom = t;
  }
  setCanvasDom(t) {
    this.$canvasDom = t;
  }
  fullscreen(t) {
    t === void 0 ? (this.options.fullscreen = !this.options.fullscreen, de.toggle(this.$dom).then(() => {
      setTimeout(() => {
        this.refreshNVAnalysisInfo();
      }, 1e3);
    })) : (this.options.fullscreen = t, setTimeout(() => {
      this.refreshNVAnalysisInfo();
    }, 1e3));
  }
}
class ft extends ut {
  constructor(t, o) {
    super(t, o);
    L(this, "zoomCenter_of_newSize", { x: 0, y: 0 });
  }
  zoom(t, o) {
    if (this.options.canvasZoom + t < 10)
      return;
    const s = this.options.canvasZoom + t, i = this.showZoomCenter(t, o);
    if (!i) {
      _("Can not zoom");
      return;
    }
    this.options.canvasOffset.x += i.buff_x, this.options.canvasOffset.y += i.buff_y, this.options.canvasZoom = s, this.refreshNVAnalysisInfo();
  }
  setZoom(t, o) {
    const s = Math.floor(t - this.options.canvasZoom);
    this.zoom(s, o);
  }
  showZoomCenter(t, o) {
    if (!this.$dom)
      return;
    const s = this.options.canvasZoom / 100, i = (this.options.canvasZoom + t) / 100, a = this.analysisByZoom(s, o), l = this.analysisByZoom(i, o), r = i / s, c = 0, u = 0, d = i / s, h = 0, w = 0;
    this.zoomCenter_of_newSize.x = r * a.NMViewBuff.x + u * a.NMViewBuff.y + h, this.zoomCenter_of_newSize.y = c * a.NMViewBuff.x + d * a.NMViewBuff.y + w;
    const b = a.NMViewBuff.x - this.zoomCenter_of_newSize.x, y = a.NMViewBuff.y - this.zoomCenter_of_newSize.y;
    this.zoomCenter_of_newSize.x += a.NMCanvasCenter.x, this.zoomCenter_of_newSize.y += a.NMCanvasCenter.y;
    let m = a.NMCanvasStart.x - a.NMCanvasCenter.x, v = a.NMCanvasStart.y - a.NMCanvasCenter.y, S = r * m + u * v + h, z = c * m + d * v + w;
    return l.NMCanvasStart.x = b + a.NMCanvasCenter.x + S, l.NMCanvasStart.y = b + a.NMCanvasCenter.y + z, m = a.NMCanvasEnd.x - a.NMCanvasCenter.x, v = a.NMCanvasEnd.y - a.NMCanvasCenter.y, S = r * m + u * v + h, z = c * m + d * v + w, l.NMCanvasEnd.x = b + a.NMCanvasCenter.x + S, l.NMCanvasEnd.y = b + a.NMCanvasCenter.y + z, a.NMCanvasOffsetBuff.x = b, a.NMCanvasOffsetBuff.y = y, {
      buff_x: b,
      buff_y: y
    };
  }
  analysisByZoom(t, o) {
    const s = {
      NMViewPosition: { x: 0, y: 0 },
      NMViewCenter: { x: 0, y: 0 },
      NMCanvasCenter: { x: 0, y: 0 },
      NMCanvasStart: { x: 0, y: 0 },
      NMCanvasEnd: { x: 0, y: 0 },
      NMZoomCenter: { x: 0, y: 0 },
      NMViewBuff: { x: 0, y: 0 },
      NMCanvasOffsetBuff: { x: 0, y: 0 },
      NMCanvasSize: { width: 0, height: 0 }
    }, i = Ve(), a = Re(), l = this.$dom.getBoundingClientRect();
    s.NMViewPosition.x = l.left, s.NMViewPosition.y = l.top, l.width + s.NMViewPosition.x > i ? s.NMViewCenter.x = (i - l.left) / 2 : s.NMViewCenter.x = l.width / 2, l.height + s.NMViewPosition.y > a ? s.NMViewCenter.y = (a - l.top) / 2 : s.NMViewCenter.y = l.height / 2;
    const r = this.options.canvasSize.width * t, c = this.options.canvasSize.height * t;
    s.NMCanvasCenter.x = this.options.canvasOffset.x + this.options.canvasSize.width / 2, s.NMCanvasCenter.y = this.options.canvasOffset.y + this.options.canvasSize.height / 2, s.NMCanvasStart.x = s.NMCanvasCenter.x - r / 2, s.NMCanvasStart.y = s.NMCanvasCenter.y - c / 2, s.NMCanvasEnd.x = s.NMCanvasCenter.x + r / 2, s.NMCanvasEnd.y = s.NMCanvasCenter.y + c / 2, s.NMZoomCenter.x = s.NMViewCenter.x, s.NMZoomCenter.y = s.NMViewCenter.y, o && (s.NMZoomCenter.x = o.x - s.NMViewPosition.x, s.NMZoomCenter.y = o.y - s.NMViewPosition.y);
    let u = s.NMViewCenter.x - s.NMCanvasCenter.x, d = s.NMViewCenter.y - s.NMCanvasCenter.y;
    return o && (u = s.NMZoomCenter.x - s.NMCanvasCenter.x, d = s.NMZoomCenter.y - s.NMCanvasCenter.y), s.NMViewBuff.x = u, s.NMViewBuff.y = d, s.NMCanvasSize.width = r, s.NMCanvasSize.height = c, s;
  }
}
class pt extends ft {
  constructor(e, t) {
    super(e, t);
  }
  doLayout() {
    if (!this.options.layouter) {
      _("no layouter");
      return;
    }
    if (!this.graphData.rootNode) {
      _("Cant find rootNode!");
      return;
    }
    _("node size\uFF1A", this.graphData.nodes.length), this.options.layouter.placeNodes(
      this.graphData.nodes,
      this.graphData.rootNode
    );
  }
  refresh(e) {
    this.resetViewSize(), this.options.layouter && this.options.layouter.refresh(), this.playShowEffect(e);
  }
  resetViewSize() {
    !this.options || (_("resetViewSize"), this.options.viewSize.width = this.$dom.getBoundingClientRect().width, this.options.viewSize.height = this.$dom.getBoundingClientRect().height, this.options.canvasZoom = 100, this.options.canvasOffset.x = this.options.viewNVInfo.width / 2, this.options.canvasOffset.y = this.options.viewNVInfo.height / 2, this.refreshNVAnalysisInfo());
  }
  dataUpdated() {
    this.zoom(1), this.zoom(-1);
  }
  refreshNVAnalysisInfo() {
    if (!this.$dom) {
      console.error("cannot get view size !");
      return;
    }
    const e = {
      NMCanvasCenter: { x: 0, y: 0 }
    }, t = this.$dom.getBoundingClientRect();
    this.options.viewNVInfo.x = t.left, this.options.viewNVInfo.y = t.top, this.options.viewNVInfo.width = t.width, this.options.viewNVInfo.height = t.height;
    const o = this.options.canvasSize.width * (this.options.canvasZoom / 100), s = this.options.canvasSize.height * (this.options.canvasZoom / 100);
    e.NMCanvasCenter.x = this.options.canvasOffset.x + this.options.canvasSize.width / 2, e.NMCanvasCenter.y = this.options.canvasOffset.y + this.options.canvasSize.height / 2, this.options.canvasNVInfo.x = e.NMCanvasCenter.x - o / 2, this.options.canvasNVInfo.y = e.NMCanvasCenter.y - s / 2, this.options.canvasNVInfo.width = o, this.options.canvasNVInfo.height = s, this.options.viewELSize.width = t.width, this.options.viewELSize.height = t.height, this.options.viewELSize.left = t.left, this.options.viewELSize.top = t.top;
  }
  getStuffSize() {
    let e = 9999999, t = 9999999, o = 0, s = 0;
    this.graphData.nodes.forEach((r) => {
      r.x < e && (e = r.x), r.x > o && (o = r.x + r.el.offsetWidth), r.y < t && (t = r.y), r.y > s && (s = r.y + r.el.offsetHeight);
    });
    const i = 100, a = o - e + i, l = s - t + i;
    return {
      width: a,
      height: l,
      minX: e,
      maxX: o,
      minY: t,
      maxY: s
    };
  }
  getNodesCenter() {
    const e = this.getStuffSize();
    _("getStuffSize:", e);
    const t = e.minX + (e.width - 100) / 2, o = e.minY + (e.height - 100) / 2;
    return {
      x: t,
      y: o
    };
  }
  setCanvasCenter(e, t) {
    const o = this.options.viewSize.width / 2, s = this.options.viewSize.height / 2;
    this.setCanvasOffset(o - e, s - t);
  }
  setCanvasOffset(e, t) {
    this.options.canvasOffset.x = e, this.options.canvasOffset.y = t;
  }
  playShowEffect(e) {
    if (this.graphData.nodes.length === 0) {
      _("relation-graph:move to center: data not ready!");
      return;
    }
    if (_(
      "playShowEffect:",
      this.options.moveToCenterWhenRefresh,
      this.options.zoomToFitWhenRefresh
    ), this.options.moveToCenterWhenRefresh)
      if (this.options.useAnimationWhenRefresh) {
        const t = this.getNodesCenter();
        _("center:", t.x, t.y);
        const o = this.options.viewSize.width / 2 - t.x, s = this.options.viewSize.height / 2 - t.y;
        this.animateGoto(o, s, 500, () => {
          this.zoomToFitWhenRefresh(e);
        });
      } else {
        const t = this.getNodesCenter();
        this.setCanvasCenter(t.x, t.y), this.zoomToFitWhenRefresh(e);
      }
    else
      this.zoomToFitWhenRefresh(e);
    if (!this.graphData.rootNode || Number.isNaN(this.graphData.rootNode.x)) {
      _("rootNode.x is NaN, graph is currently hidden?");
      return;
    }
    this.options.placeSingleNode && this.options.layoutName !== "fixed" && this.placeSingleNode();
  }
  zoomToFitWhenRefresh(e) {
    this.options.zoomToFitWhenRefresh ? this.zoomToFit(e) : e && e(this);
  }
  findChilds(e, t) {
    t.push(e), e.targetNodes.forEach((o) => {
      t.includes(o) || this.findChilds(o, t);
    });
  }
  placeSingleNode() {
    const e = [];
    this.findChilds(this.graphData.rootNode, e);
    const t = [];
    if (this.graphData.nodes.forEach((o) => {
      e.includes(o) || o.targetNodes && o.targetNodes.length === 0 && o.fixed !== !0 && (o.x = Math.floor(Math.random() * 200) - 100, o.y = Math.floor(Math.random() * 200) - 100, o.lot || (o.lot = { childs: [] }), o.lot.placed = !0, t.push(o));
    }), t.length > 0) {
      _("sigle nodes:", t.length);
      const o = new fe({ layoutName: "fixed" }, {});
      o.__origin_nodes = this.graphData.nodes, o.justLayoutSingleNode = !0, o.maxLayoutTimes = 100, o.byLine = !1, o.autoLayout();
    }
  }
  zoomToFit(e) {
    const t = this.getStuffSize(), o = this.options.viewSize.width / t.width, s = this.options.viewSize.height / t.height, i = Math.min(o, s, 1);
    _("animateToZoom:", {
      stuffSize: t,
      zoomPercent: i,
      zoomPercentX: o,
      zoomPercentY: s,
      viewSize: this.options.viewSize
    }), this.options.useAnimationWhenRefresh ? this.animateToZoom(i * 100, 300, e) : (this.setZoom(i * 100), e && e(this));
  }
  animateGoto(e, t, o, s) {
    _("animateGoto:", e, t);
    const i = e - this.options.canvasOffset.x, a = t - this.options.canvasOffset.y, l = o, r = 5, c = Math.round(i / r), u = Math.round(a / r), d = l / r;
    this.animateStepAction(
      0,
      d,
      r,
      () => {
        this.options.canvasOffset.x += c, this.options.canvasOffset.y += u;
      },
      () => {
        s && s(this);
      }
    );
  }
  animateToZoom(e, t, o) {
    const s = e - this.options.canvasZoom, i = t, a = 5, l = Math.round(s / a), r = i / a;
    _("animateToZoom:", s, l), this.animateStepAction(
      0,
      r,
      a,
      () => {
        this.zoom(l);
      },
      () => {
        this.setZoom(e), o && o(this);
      }
    );
  }
  animateStepAction(e, t, o, s, i) {
    e < o ? (s(e, o), setTimeout(() => {
      this.animateStepAction(
        e + 1,
        t,
        o,
        s,
        i
      );
    }, t)) : i();
  }
  startAutoLayout() {
    this.options.autoLayouting = !this.options.autoLayouting, this.options.layouter && (this.options.autoLayouting ? this.options.layouter.autoLayout ? this.options.layouter.autoLayout(!0) : console.log("\u5F53\u524D\u5E03\u5C40\u4E0D\u652F\u6301\u81EA\u52A8\u5E03\u5C40\uFF01") : this.options.layouter.stop ? this.options.layouter.stop() : console.log("\u5F53\u524D\u5E03\u5C40\u4E0D\u652F\u6301\u81EA\u52A8\u5E03\u5C40stop\uFF01"));
  }
  stopAutoLayout() {
    this.options.autoLayouting = !1, this.options.layouter && (this.options.layouter.stop ? this.options.layouter.stop() : console.log("\u5F53\u524D\u5E03\u5C40\u4E0D\u652F\u6301\u81EA\u52A8\u5E03\u5C40stop\uFF01"));
  }
}
class _t extends pt {
  constructor(e, t) {
    super(e, t);
  }
  setDefaultLineShape(e) {
    this.options.defaultLineShape = e;
  }
  setDefaultJunctionPoint(e) {
    this.options.defaultJunctionPoint = e;
  }
  updateNodeOffsetSize(e, t, o) {
    e.el.offsetWidth = t, e.el.offsetHeight = o;
  }
  onNodeClick(e, t) {
    _("onNodeClick:", e), this.options.disableNodeClickEffect !== !0 && e.disableDefaultClickEffect !== !0 && this.setCheckedNode(e.id), this.listeners["on-node-click"] && this.listeners["on-node-click"](e, t);
  }
  onLineClick(e, t, o) {
    _("onLineClick:", "line:", e, "link:", t), this.options.disableLineClickEffect !== !0 && e.disableDefaultClickEffect !== !0 && (this.setCheckedLine(t.seeks_id), this.selectNode(t.fromNode, !0), this.selectNode(t.toNode, !0), setTimeout(() => {
      this.selectNode(t.fromNode, !1), this.selectNode(t.toNode, !1);
    }, 2e3)), this.listeners["on-line-click"] && this.listeners["on-line-click"](e, t, o);
  }
  expandOrCollapseNode(e, t) {
    e.expanded === !1 ? this.expandNode(e, t) : this.collapseNode(e, t);
  }
  expandNode(e, t) {
    _("onNodeExpand:", e), e.expanded = !0, e.lot.childs.forEach((o) => {
      o.isShow = !0;
    }), this.listeners["on-node-expand"] && this.listeners["on-node-expand"](e, t);
  }
  collapseNode(e, t) {
    _("onNodeCollapse:", e), e.expanded = !1, e.lot.childs.forEach((o) => {
      o.isShow = !1;
    }), this.listeners["on-node-collapse"] && this.listeners["on-node-collapse"](e, t);
  }
  focusRootNode() {
    _("relation-graph:focusRootNode"), this.graphData.rootNode && this.handleSelect(this.graphData.rootNode);
  }
  focusNodeById(e) {
    this.graphData.nodes.forEach((t) => {
      t.id === e && this.handleSelect(t);
    });
  }
  querySearchAsync(e, t) {
    if (_("fetch-suggestions", e), e = e.trim(), e === "")
      return;
    const o = [];
    this.graphData.nodes.forEach((s) => {
      _("fetch:", s.text), s.text.includes(e) && o.push(s);
    }), _("fetched:", o.length), t(o);
  }
  handleSelect(e) {
    _("checked:", e), scrollTo({
      top: this.$dom.offsetTop
    }), this.animateToZoom(100, 300, () => {
      const t = e.width || 50, o = e.height || 50, s = e.x * -1 + this.options.viewSize.width / 2 - t / 2, i = e.y * -1 + this.options.viewSize.height / 2 - o / 2;
      this.animateGoto(s, i, 500, () => {
        this.options.checkedNodeId = e.id, this.refreshNVAnalysisInfo();
      });
    });
  }
}
class mt extends _t {
  constructor(e, t) {
    super(e, t);
  }
  dataURLToBlob(e) {
    const t = e.split(","), o = t[0].match(/:(.*?);/)[1], s = atob(t[1]);
    let i = s.length;
    const a = new Uint8Array(i);
    for (; i--; )
      a[i] = s.charCodeAt(i);
    return new Blob([a], { type: o });
  }
  downloadAsImage(e, t = "png") {
    if (this.listeners["on-image-download"] && this.listeners["on-image-download"](
      this.$canvasDom,
      t
    ) === !1)
      return;
    if (this.graphData.nodes.length === 0)
      throw new Error("\u6CA1\u6709\u8282\u70B9\uFF0C\u6CA1\u6709\u5185\u5BB9\u9700\u8981\u5BFC\u51FA\uFF01");
    t || (t = "png"), e || (e = this.options.downloadImageFileName), e || (e = `SeeksRelationGraph-${(Math.random() * 1e5).toFixed(0)}`), this.options.checkedNodeId = "";
    const o = this.options.canvasZoom;
    this.options.canvasZoom = 100;
    const s = this.$canvasDom, i = s.clientWidth, a = s.clientHeight;
    let l = 999999, r = 999999, c = 0, u = 0;
    const d = 100;
    this.graphData.nodes.forEach((k) => {
      k.x < l && (l = k.x), k.x > c && (c = k.x + k.el.offsetWidth), k.y < r && (r = k.y), k.y > u && (u = k.y + k.el.offsetHeight);
    });
    const h = l - d, w = r - d;
    this.graphData.nodes.forEach((k) => {
      k.x = k.x - h, k.y = k.y - w;
    });
    const b = this.options.canvasOffset.x, y = this.options.canvasOffset.y;
    this.options.canvasOffset.x = d * -1, this.options.canvasOffset.y = d * -1, _("offset:", {
      _origin_offset_x: b,
      _origin_offset_y: y,
      _min_x: l,
      _min_y: r,
      _max_x: c,
      _max_y: u
    });
    const m = c - l + 200 + d * 2, v = u - r + 100 + d * 2, S = window.devicePixelRatio;
    this.options.canvasSize.width = m * S, this.options.canvasSize.height = v * S;
    const z = {
      left: this.$dom.offsetLeft - s.getBoundingClientRect().left,
      top: this.$dom.offsetTop - s.getBoundingClientRect().top,
      canvas_offsetLeft: s.offsetLeft,
      canvas_offsetTop: s.offsetTop,
      canvas_left: s.getBoundingClientRect().left,
      canvas_top: s.getBoundingClientRect().top
    };
    window.scrollTo(0, 0), _("export image:", {
      relationGraphPosition: z,
      orign_width: i,
      orign_height: a,
      _image_width: m,
      _image_height: v,
      _min_x: l,
      _min_y: r,
      _max_x: c,
      _max_y: u,
      devicePixelRatio: window.devicePixelRatio
    });
    const C = document.createElement("canvas");
    C.width = m * S, C.height = v * S, C.style.backgroundColor = getComputedStyle(
      s.parentElement,
      null
    ).backgroundColor, _("canvas.style.backgroundColor:", C.style.backgroundColor), C.style.width = `${m * S}px`, C.style.height = `${v * S}px`, C.getContext("2d").scale(1, 1);
    const H = {
      backgroundColor: C.style.backgroundColor,
      scale: S,
      canvas: C,
      logging: !0,
      width: m,
      height: v,
      useCORS: !0
    };
    setTimeout(() => {
      this.createImage(s, H, t, e, (k) => {
        _("downloadImageAsFile:", H, t, e), this.listeners["on-image-save-as-file"] ? this.listeners["on-image-save-as-file"](
          k,
          t,
          e
        ) : this.downloadImageAsFile(k, t, e), this.options.canvasSize.width = i, this.options.canvasSize.height = a, this.options.canvasOffset.x = b, this.options.canvasOffset.y = y, this.options.canvasZoom = o, this.graphData.nodes.forEach((P) => {
          P.x = P.x + h, P.y = P.y + w;
        });
      });
    }, 1e3);
  }
  createImage(e, t, o, s, i) {
    _("createImage:", t), He(e, t).then((a) => {
      i && i(a);
    });
  }
  downloadImageAsFile(e, t, o) {
    const s = document.body.appendChild(e);
    s.style.display = "none";
    const i = this.dataURLToBlob(s.toDataURL(`image/${t}`));
    document.body.removeChild(s);
    const a = document.createElement("a");
    a.style.display = "none";
    try {
      window.navigator.msSaveOrOpenBlob ? window.navigator.msSaveOrOpenBlob(i, `${o}.${t}`) : (a.setAttribute("href", URL.createObjectURL(i)), a.setAttribute("download", `${o}.${t}`), document.body.appendChild(a), a.click(), _("click ok!"), URL.revokeObjectURL(i), _("revokeObjectURL ok!"), document.body.removeChild(a), _("removeChild ok!"));
    } catch (l) {
      _("[SEEKS Graph]Create and download image error:", l);
    }
  }
}
class gt extends mt {
  constructor(e, t) {
    super(e, t);
  }
  createReturnValue(e, t) {
    return { path: e, textPosition: t };
  }
  createLinePath(e, t, o) {
    const s = e.fromNode, i = e.toNode;
    o || (o = 0);
    const a = t.lineShape || this.options.defaultLineShape || 1, l = t.lineDirection || this.options.layoutDirection || "h";
    let r = s.x, c = s.y, u = i.x, d = i.y;
    const h = { x: 0, y: 0, rotate: 0 };
    if (Number.isNaN(r) || Number.isNaN(c))
      return _("error start node:", s), h.x = 50, h.y = 50, h.rotate = 0, this.createReturnValue("M 0 0 L 100 100", h);
    if (Number.isNaN(u) || Number.isNaN(d))
      return _("error start point:", s), h.x = 50, h.y = 50, h.rotate = 0, this.createReturnValue("M 0 0 L 100 100", h);
    let w = s.el.offsetWidth || s.width || 60, b = s.el.offsetHeight || s.height || 60;
    if (Number.isNaN(w) || Number.isNaN(b))
      return h.x = 50, h.y = 50, h.rotate = 0, this.createReturnValue("M 0 0 L 100 100", h);
    let y = i.el.offsetWidth || i.width || 60, m = i.el.offsetHeight || i.height || 60;
    if (Number.isNaN(y) || Number.isNaN(m))
      return h.x = 50, h.y = 50, h.rotate = 0, this.createReturnValue("M 0 0 L 100 100", h);
    t.isReverse && ([r, c, u, d, w, b, y, m] = [
      u,
      d,
      r,
      c,
      y,
      m,
      w,
      b
    ]);
    const v = [
      r,
      c,
      u,
      d,
      w,
      b,
      y,
      m,
      this.options.defaultNodeShape,
      t.isReverse,
      e.relations.length,
      o
    ], S = [
      u,
      d,
      r,
      c,
      y,
      m,
      w,
      b,
      this.options.defaultNodeShape,
      !t.isReverse,
      e.relations.length,
      o
    ];
    let z, C, H = this.options.defaultJunctionPoint;
    if (H || (H = le.border), H === le.border ? (z = N.getBorderPoint4MultiLine(...v), C = N.getBorderPoint4MultiLine(...S)) : H === le.ltrb ? (z = N.getRectJoinPoint(...v), C = N.getRectJoinPoint(...S)) : H === le.tb ? (z = N.getRectVJoinPoint(...v), C = N.getRectVJoinPoint(...S)) : H === le.lr && (z = N.getRectHJoinPoint(...v), C = N.getRectHJoinPoint(...S)), !z || !C)
      return this.createReturnValue(
        "Can not create start and end!",
        h
      );
    const k = z.x, P = z.y, se = C.x, ae = C.y;
    if (Number.isNaN(k) || Number.isNaN(P))
      return console.error("error start point:", s), h.x = 50, h.y = 50, h.rotate = 0, this.createReturnValue("M 0 0 L 100 100", h);
    if (Number.isNaN(se) || Number.isNaN(ae))
      return console.error("error end point:", i), h.x = 50, h.y = 50, h.rotate = 0, this.createReturnValue("M 0 0 L 100 100", h);
    let $ = C.x - z.x, E = C.y - z.y, A = C.x > z.x ? 1 : -1;
    l === "v" && (A = C.y > z.y ? 1 : -1);
    let G = "";
    if (a === 4) {
      const I = 60 / (e.relations.length + 1) * (o + 1) - 30;
      l === "v" ? (E = E - (A * 33 + I), h.x = k + $ + 5, h.y = P + A * 40 + I, h.rotate = 90, G = `M ${k} ${P} v${A * 33 + I} h${$ + I} v${E}`) : t.reverseText === !0 ? (h.x = k + A * 10 - (A < 0 ? 30 : 0), h.y = P - 5, $ = $ - A * 120, G = `M ${k} ${P} h${A * 120} v${E} h${$}`) : (h.x = k + A * 50 - (A < 0 ? 30 : 0), h.y = P + E - 5 + I, $ = $ - (A * 33 + I), E = E + A * I, G = `M ${k} ${P} h${A * 33 + I} v${E} h${$}`);
    } else if (a === 2) {
      const I = C.y > z.y ? 1 : -1, Q = Math.abs($) + Math.abs(E);
      h.x = Math.round(C.x - $ / Q * 60 - 20), h.y = Math.round(
        C.y - E / Q * 60 - 20 * I
      );
      const ce = 1 / (e.relations.length + 1) * (o + 1) - 0.5 + 0.5;
      l === "v" ? G = `M${k},${P} c${0},${A * 30} ${$ * ce},${A * -10} ${$},${E}` : G = `M${k},${P} c${A * 30},${0} ${A * -10},${E * ce} ${$},${E}`;
    } else if (a === 6) {
      const I = C.y > z.y ? 1 : -1, Q = Math.abs($) + Math.abs(E);
      h.x = Math.round(C.x - $ / Q * 60 - 20), h.y = Math.round(
        C.y - E / Q * 60 - 20 * I
      ), l === "v" ? G = `M${k},${P} c${0},${E / 2} ${$},${E / 2} ${$},${E}` : G = `M${k},${P} c${$ / 2},${0} ${$ / 2},${E} ${$},${E}`;
    } else if (a === 3) {
      h.x = C.x - A * 63, h.y = C.y + 3;
      const I = 1 / (e.relations.length + 1) * (o + 1) - 0.5 + 0.5;
      l === "v" ? G = `M${k},${P} c${0},${E * I} ${0},${0} ${$},${E}` : G = `M${k},${P} c${A * 30},${0} ${A * -10},${E * I} ${$},${E}`;
    } else if (a === 5) {
      h.x = C.x - A * 63, h.y = C.y + 3;
      const I = 1 / (e.relations.length + 1) * (o + 1) - 0.5 + 0.5;
      l === "v" ? G = `M${k},${P} c${0},${0} ${0},${E * I} ${$},${E}` : G = `M${k},${P} c${0},${0} ${$ * I},${0} ${$},${E}`;
    } else {
      const I = N.getAngleType($, E);
      h.rotate = N.getTextAngle(k, P, se, ae);
      const Q = I === 2 || I === 4 ? -1 : 1, ce = (E === 0 ? -50 : Math.sin(Math.atan($ / E)) * 10 / Math.sin(90)) * Q, ze = $ === 0 ? -50 : Math.sin(Math.atan(E / $)) * 10 / Math.sin(90);
      h.x = Math.round(z.x + $ / 2 - ce), h.y = Math.round(z.y + E / 2 - ze), Number.isNaN(h.rotate) && (h.rotate = 0), G = `M ${k} ${P} L ${se} ${ae}`;
    }
    return this.createReturnValue(G, h);
  }
  getTextTransform(e, t, o, s) {
    if (Number.isNaN(t) || Number.isNaN(o))
      return "translate(0,0)";
    const i = e.lineShape === void 0 ? this.options.defaultLineShape : e.lineShape;
    return i === 1 || i === 4 ? `translate(${t},${o})rotate(${s || 0})` : `translate(${t},${o})`;
  }
  getArrow(e, t, o = !1) {
    const s = t.seeks_id === this.options.checkedLineId;
    return e.isHideArrow ? "none" : `url('#${this.getLineArrow(
      e.color,
      o,
      s
    )}')`;
  }
}
class yt extends gt {
  constructor(e, t) {
    super(e, t);
  }
}
const vt = ["onClick"], xt = ["innerHTML"], wt = ["innerHTML"], bt = ["innerHTML"], Ct = /* @__PURE__ */ O({
  __name: "RGNode",
  props: {
    nodeProps: null
  },
  setup(n) {
    const e = n, t = W(), o = W(!1), s = W(!1), i = X(j).value, a = Y(() => e.nodeProps.expanded === !1 ? "c-expanded" : "c-collapsed"), l = () => {
      (e.nodeProps.el.offsetWidth !== t.value.offsetWidth || e.nodeProps.el.offsetHeight !== t.value.offsetHeight) && i.updateNodeOffsetSize(
        e.nodeProps,
        t.value.offsetWidth,
        t.value.offsetHeight
      );
    }, r = (y) => {
      i.expandOrCollapseNode(e.nodeProps, y);
    }, c = (y) => {
      i.options.disableDragNode || e.nodeProps.disableDrag || (s.value = !0, o.value = !1, me.startDrag(
        y,
        e.nodeProps,
        u,
        (m, v, S) => {
          const z = m / (i.options.canvasZoom / 100) + S.x, C = v / (i.options.canvasZoom / 100) + S.y;
          i.setNodePosition(e.nodeProps, z, C);
        }
      ));
    }, u = (y, m, v) => {
      if (y === 0 && m === 0) {
        i.onNodeClick(e.nodeProps, v);
        return;
      }
      i.options.isMoveByParentNode && e.nodeProps.lot.childs.forEach((S) => {
        S.x += y, S.y += m;
      }), Math.abs(y) + Math.abs(m) > 6 ? setTimeout(() => {
        _("delay end dragging", s.value), s.value = !1;
      }, 100) : s.value = !1;
    }, d = () => {
      s.value || i.options.disableNodeClickEffect !== !0 && e.nodeProps.disableDefaultClickEffect !== !0 && (o.value = !0);
    }, h = () => {
      i.options.disableNodeClickEffect !== !0 && e.nodeProps.disableDefaultClickEffect !== !0 && (o.value = !1);
    }, w = (y) => {
      s.value || i.onNodeClick(e.nodeProps, y);
    }, b = (y) => y.isShow !== !1 && y.isHide !== !0 && (!y.lot.parent || b(y.lot.parent) === !0);
    return ue(() => {
      l();
    }), xe(() => {
      t.value.remove();
    }), (y, m) => Pe((g(), x("div", {
      ref_key: "seeksRGNode$",
      ref: t,
      style: D({
        left: n.nodeProps.x + "px",
        top: n.nodeProps.y + "px",
        opacity: n.nodeProps.opacity > 1 ? n.nodeProps.opacity / 100 : n.nodeProps.opacity
      }),
      class: "rel-node-peel"
    }, [
      n.nodeProps.expandHolderPosition && n.nodeProps.expandHolderPosition !== "hide" || f(i).options.defaultExpandHolderPosition && f(i).options.defaultExpandHolderPosition !== "hide" && n.nodeProps.lot.childs && n.nodeProps.lot.childs.length > 0 ? (g(), x("div", {
        key: 0,
        class: F([[
          "c-expand-positon-" + (n.nodeProps.expandHolderPosition || f(i).options.defaultExpandHolderPosition)
        ], "c-btn-open-close"])
      }, [
        p("span", {
          class: F(f(a)),
          style: D({
            "background-color": n.nodeProps.color || f(i).options.defaultNodeColor
          }),
          onClick: V(r, ["stop"])
        }, null, 14, vt)
      ], 2)) : B("", !0),
      n.nodeProps.html ? (g(), x("div", {
        key: 1,
        onClick: m[0] || (m[0] = V((v) => w(v), ["stop"])),
        onMousedown: m[1] || (m[1] = V((v) => c(v), ["left", "stop"])),
        onTouchstart: m[2] || (m[2] = V((v) => c(v), ["stop"])),
        onMouseover: m[3] || (m[3] = V((v) => d(), ["stop"])),
        onMouseout: m[4] || (m[4] = V((v) => h(), ["stop"])),
        innerHTML: n.nodeProps.html
      }, null, 40, xt)) : (g(), x("div", {
        key: 2,
        class: F([[
          "rel-node-shape-" + (n.nodeProps.nodeShape === void 0 ? f(i).options.defaultNodeShape : n.nodeProps.nodeShape),
          "rel-node-type-" + n.nodeProps.type,
          n.nodeProps.id === f(i).options.checkedNodeId ? "rel-node-checked" : "",
          n.nodeProps.selected ? "rel-node-selected" : "",
          n.nodeProps.styleClass,
          o.value ? "rel-node-hover" : "",
          n.nodeProps.innerHTML ? "rel-diy-node" : ""
        ], "rel-node"]),
        style: D({
          "background-color": n.nodeProps.color === void 0 ? f(i).options.defaultNodeColor : n.nodeProps.color,
          color: n.nodeProps.fontColor === void 0 ? f(i).options.defaultNodeFontColor : n.nodeProps.fontColor,
          border: (n.nodeProps.borderColor || f(i).options.defaultNodeBorderColor) + " solid " + (n.nodeProps.borderWidth || f(i).options.defaultNodeBorderWidth) + "px",
          width: (n.nodeProps.width || f(i).options.defaultNodeWidth) + "px",
          height: (n.nodeProps.height || f(i).options.defaultNodeHeight) + "px"
        }),
        onClick: m[5] || (m[5] = V((v) => w(v), ["stop"])),
        onMousedown: m[6] || (m[6] = V((v) => c(v), ["left", "stop"])),
        onTouchstart: m[7] || (m[7] = V((v) => c(v), ["stop"])),
        onMouseover: m[8] || (m[8] = V((v) => d(), ["stop"])),
        onMouseout: m[9] || (m[9] = V((v) => h(), ["stop"]))
      }, [
        f(i).options.hideNodeContentByZoom === !0 && f(i).options.canvasZoom < 40 ? B("", !0) : T(y.$slots, "node", {
          key: 0,
          node: n.nodeProps
        }, () => [
          n.nodeProps.innerHTML ? (g(), x("div", {
            key: 1,
            innerHTML: n.nodeProps.innerHTML
          }, null, 8, bt)) : (g(), x("div", {
            key: 0,
            style: D({
              color: n.nodeProps.fontColor || f(i).options.defaultNodeFontColor
            }),
            class: "c-node-text"
          }, [
            p("span", {
              innerHTML: n.nodeProps.text
            }, null, 8, wt)
          ], 4))
        ], !0)
      ], 38))
    ], 4)), [
      [Ne, b(n.nodeProps)]
    ]);
  }
});
const q = (n, e) => {
  const t = n.__vccOpts || n;
  for (const [o, s] of e)
    t[o] = s;
  return t;
}, kt = /* @__PURE__ */ q(Ct, [["__scopeId", "data-v-41b1ef18"]]), Mt = ["xlink:href"], Lt = ["x"], St = ["xlink:href"], zt = /* @__PURE__ */ O({
  __name: "RGLineTextByPath",
  props: {
    link: null,
    relation: null,
    relationIndex: null
  },
  setup(n) {
    const e = n, t = X(j).value, o = Y(() => e.link.seeks_id === t.options.checkedLineId), s = Y(() => {
      const a = Te(e.relation.text) * 10;
      return (Je(
        e.link.fromNode.x,
        e.link.fromNode.y,
        e.link.toNode.x,
        e.link.toNode.y
      ) - a) / 2;
    }), i = (a, l) => {
      t.onLineClick(a, e.link, l);
    };
    return (a, l) => (g(), x("g", null, [
      p("use", {
        "xlink:href": "#" + f(t).options.instanceId + "-" + n.link.seeks_id + "-" + n.relationIndex,
        class: F(["c-rg-line", f(o) ? "c-rg-line-checked" : ""]),
        onClick: l[0] || (l[0] = (r) => i(n.relation, r))
      }, null, 10, Mt),
      p("text", {
        class: "c-rg-line-text",
        style: D({
          opacity: n.relation.opacity,
          fill: f(o) ? f(t).options.checkedLineColor : n.relation.fontColor ? n.relation.fontColor : n.relation.color ? n.relation.color : void 0
        }),
        x: f(s),
        y: "0",
        onClick: l[1] || (l[1] = (r) => i(n.relation, r))
      }, [
        p("textPath", {
          "xlink:href": "#" + f(t).options.instanceId + "-" + n.link.seeks_id + "-" + n.relationIndex,
          startOffset: "0",
          "text-anchor": "start",
          method: "align",
          spacing: "auto"
        }, oe(n.relation.text), 9, St)
      ], 12, Lt)
    ]));
  }
});
const $t = /* @__PURE__ */ q(zt, [["__scopeId", "data-v-5a7c66a9"]]), Et = ["d", "stroke", "marker-start", "marker-end"], Pt = ["transform"], Nt = /* @__PURE__ */ O({
  __name: "RGLineSmart",
  props: {
    link: null,
    relation: null,
    relationIndex: null
  },
  setup(n) {
    const e = n, t = X(j).value, o = Y(() => e.link.seeks_id === t.options.checkedLineId), s = Y(() => {
      const { path: l, textPosition: r } = t.createLinePath(
        e.link,
        e.relation,
        e.relationIndex
      );
      return l;
    }), i = Y(() => {
      const { path: l, textPosition: r } = t.createLinePath(
        e.link,
        e.relation,
        e.relationIndex
      );
      return t.getTextTransform(
        e.relation,
        r.x,
        r.y,
        r.rotate
      );
    }), a = (l, r) => {
      t.onLineClick(l, e.link, r);
    };
    return (l, r) => (g(), x("g", null, [
      p("path", {
        d: f(s),
        class: F(["c-rg-line", n.relation.styleClass, f(o) ? "c-rg-line-checked" : ""]),
        stroke: f(o) ? f(t).options.checkedLineColor : n.relation.color ? n.relation.color : f(t).options.defaultLineColor,
        style: D({
          opacity: n.relation.opacity,
          "stroke-width": (n.relation.lineWidth ? n.relation.lineWidth : f(t).options.defaultLineWidth) + "px"
        }),
        "marker-start": n.relation.showStartArrow && f(t).getArrow(n.relation, n.link, !0),
        "marker-end": n.relation.showEndArrow && f(t).getArrow(n.relation, n.link, !1),
        fill: "none",
        onClick: r[0] || (r[0] = (c) => a(n.relation, c))
      }, null, 14, Et),
      f(t).options.defaultShowLineLabel && f(t).options.canvasZoom > 40 ? (g(), x("g", {
        key: 0,
        transform: f(i)
      }, [
        (g(), x("text", {
          key: "t-" + n.relation.seeks_id,
          x: 0,
          y: 0,
          style: D({
            opacity: n.relation.opacity,
            fill: f(o) ? f(t).options.checkedLineColor : n.relation.fontColor ? n.relation.fontColor : n.relation.color ? n.relation.color : void 0
          }),
          class: "c-rg-line-text",
          onClick: r[1] || (r[1] = (c) => a(n.relation, c))
        }, oe(n.relation.text), 5))
      ], 8, Pt)) : B("", !0)
    ]));
  }
});
const Bt = /* @__PURE__ */ O({
  __name: "RGLink",
  props: {
    linkProps: null
  },
  setup(n) {
    const e = X(j).value, t = (o) => o.isShow !== !1 && o.isHide !== !0 && (!o.lot.parent || t(o.lot.parent) === !0);
    return (o, s) => n.linkProps.isHide !== !0 && t(n.linkProps.fromNode) && t(n.linkProps.toNode) ? (g(), x("g", {
      key: 0,
      ref: "seeksRGLink",
      class: F([
        f(e).options.checkedLineId == n.linkProps.seeks_id ? "c-rg-link-checked" : ""
      ]),
      transform: "translate(0,0)"
    }, [
      (g(!0), x(R, null, Z(n.linkProps.relations, (i, a) => T(o.$slots, "line", {
        line: i,
        relationIndex: a
      }, () => [
        (f(e).options.lineUseTextPath || i.useTextPath) && i.isHide === !1 ? (g(), ne($t, {
          key: "l-" + i.seeks_id,
          link: n.linkProps,
          relation: i,
          "relation-index": a
        }, null, 8, ["link", "relation", "relation-index"])) : i.isHide === !1 ? (g(), ne(Nt, {
          key: "l-" + i.seeks_id,
          link: n.linkProps,
          relation: i,
          "relation-index": a
        }, null, 8, ["link", "relation", "relation-index"])) : B("", !0)
      ], !0)), 256))
    ], 2)) : B("", !0);
  }
});
const At = /* @__PURE__ */ q(Bt, [["__scopeId", "data-v-c6092e44"]]), It = ["id", "d", "stroke", "marker-start", "marker-end"], Ft = /* @__PURE__ */ O({
  __name: "RGLinePath",
  props: {
    link: null,
    relation: null,
    relationIndex: null
  },
  setup(n) {
    const e = n, t = X(j).value, o = Y(() => e.link.seeks_id === t.options.checkedLineId), s = Y(() => {
      const { path: i, textPosition: a } = t.createLinePath(
        e.link,
        e.relation,
        e.relationIndex
      );
      return i;
    });
    return (i, a) => (g(), x("path", {
      id: f(t).options.instanceId + "-" + n.link.seeks_id + "-" + n.relationIndex,
      d: f(s),
      stroke: f(o) ? f(t).options.checkedLineColor : n.relation.color ? n.relation.color : f(t).options.defaultLineColor,
      style: D({
        opacity: n.relation.opacity,
        "stroke-width": (n.relation.lineWidth ? n.relation.lineWidth : f(t).options.defaultLineWidth) + "px"
      }),
      "marker-start": n.relation.showStartArrow && f(t).getArrow(n.relation, n.link, !0),
      "marker-end": n.relation.showEndArrow && f(t).getArrow(n.relation, n.link, !1),
      class: F([n.relation.styleClass, f(o) ? "c-rg-line-checked" : ""]),
      fill: "none"
    }, null, 14, It));
  }
}), Le = (n) => (we("data-v-0bec2dcf"), n = n(), be(), n), Dt = ["id"], Ht = /* @__PURE__ */ Le(() => /* @__PURE__ */ p("stop", {
  offset: "0%",
  "stop-color": "#e52c5c"
}, null, -1)), Wt = /* @__PURE__ */ Le(() => /* @__PURE__ */ p("stop", {
  offset: "100%",
  "stop-color": "#FD8B37"
}, null, -1)), Gt = [
  Ht,
  Wt
], Vt = ["id", "markerWidth", "markerHeight", "refX", "refY"], Rt = ["d"], Tt = ["id", "markerWidth", "markerHeight", "refX", "refY"], Ot = ["d"], jt = ["id"], Jt = ["id"], Zt = ["id", "markerWidth", "markerHeight", "refX", "refY"], Yt = ["fill", "d"], Xt = ["id", "markerWidth", "markerHeight", "refX", "refY"], Ut = ["fill", "d"], qt = { class: "rel-nodediv rel-nodediv-for-webkit" }, Qt = /* @__PURE__ */ O({
  __name: "RGCanvas",
  setup(n) {
    const e = W(), t = W(), o = X(j).value, s = () => {
      e.value.style.setProperty(
        "--stroke",
        `url('#${o.options.instanceId}-lineStyle')`
      ), e.value.style.setProperty(
        "--markerEnd",
        `url('#${o.options.instanceId}-start-arrow-default')`
      ), e.value.style.setProperty(
        "--markerStart",
        `url('#${o.options.instanceId}-arrow-default')`
      ), e.value.style.setProperty(
        "--markerEndChecked",
        `url('#${o.options.instanceId}-arrow-checked')`
      ), e.value.style.setProperty(
        "--markerStartChecked",
        `url('#${o.options.instanceId}-start-arrow-checked')`
      );
    }, i = (c) => {
      if (o.options.disableZoom)
        return c.cancelBubble = !1, !0;
      try {
        c.cancelBubble = !0, c.preventDefault(), c.stopPropagation();
      } catch {
      }
      const u = {
        x: c.clientX,
        y: c.clientY
      };
      let d = c.deltaY;
      d === void 0 && (d = c.wheelDelta);
      const h = -1;
      d > 0 ? o.zoom(5 * h, u) : o.zoom(-5 * h, u);
    }, a = () => {
    }, l = (c) => {
      if (o.options.disableDragCanvas)
        return;
      let u;
      if (ie) {
        let d = null, h = 100;
        u = (w, b, y, m, v) => {
          const S = v.touches || v.targetTouches, z = S[0];
          if (S && S.length > 1) {
            v.preventDefault();
            const C = S[1];
            d || (d = {
              x: C.clientX,
              y: C.clientY
            }, h = o.options.canvasZoom);
            const H = {
              x: z.clientX,
              y: z.clientY
            }, k = {
              x: C.clientX,
              y: C.clientY
            }, P = Math.hypot(
              d.x - m.x,
              d.y - m.y
            ), ae = Math.hypot(
              k.x - H.x,
              k.y - H.y
            ) / P, $ = h * ae;
            o.setZoom($);
          } else {
            const C = z.clientX, H = z.clientY, k = y.x + (C - m.x), P = y.y + (H - m.y);
            o.setCanvasOffset(k, P);
          }
        };
      }
      me.startDrag(
        c,
        o.options.canvasOffset,
        a,
        u
      );
    }, r = Y(() => ({
      width: `${o.options.canvasSize.width}px`,
      height: `${o.options.canvasSize.height}px`,
      "margin-left": `${o.options.canvasOffset.x}px`,
      "margin-top": `${o.options.canvasOffset.y}px`,
      "background-color": "transparent",
      transform: `scale(${o.options.canvasZoom / 100},${o.options.canvasZoom / 100})`
    }));
    return ue(() => {
      _("[RGCanvas mounted]"), s(), o.setCanvasDom(t.value);
    }), (c, u) => (g(), x("div", {
      style: D({
        width: "100%",
        height: "100%",
        "background-image": "url(" + f(o).options.backgrounImage + ")"
      }),
      class: F([[
        f(o).options.layoutClassName,
        f(o).options.backgrounImageNoRepeat ? "rel-map-background-norepeat" : ""
      ], "rel-map"]),
      onMousedown: u[0] || (u[0] = V((d) => l(d), ["left", "stop"])),
      onTouchstart: u[1] || (u[1] = V((d) => l(d), ["stop"])),
      onWheel: i
    }, [
      p("div", {
        ref_key: "seeksRGCanvas",
        ref: t,
        style: D(f(r)),
        class: "rel-map-canvas"
      }, [
        T(c.$slots, "canvas-plug", {}, void 0, !0),
        p("div", {
          ref_key: "rgCanvas$",
          ref: e,
          class: "rel-linediv",
          style: { overflow: "visible" }
        }, [
          (g(), x("svg", {
            style: D([{
              width: f(o).options.canvasSize.width + "px",
              height: f(o).options.canvasSize.height + "px"
            }, { overflow: "visible" }]),
            xmlns: "http://www.w3.org/2000/svg"
          }, [
            p("defs", null, [
              p("linearGradient", {
                id: f(o).options.instanceId + "-lineStyle",
                x1: "1",
                y1: "0",
                x2: "0",
                y2: "0"
              }, Gt, 8, Dt),
              p("marker", {
                id: f(o).options.instanceId + "-arrow-default",
                markerWidth: f(o).options.defaultLineMarker.markerWidth,
                markerHeight: f(o).options.defaultLineMarker.markerHeight,
                refX: f(o).options.defaultLineMarker.refX,
                refY: f(o).options.defaultLineMarker.refY,
                "marker-units": "strokeWidth",
                orient: "auto",
                viewBox: "0 0 12 12"
              }, [
                p("path", {
                  style: D({ fill: f(o).options.defaultLineColor }),
                  d: f(o).options.defaultLineMarker.data
                }, null, 12, Rt)
              ], 8, Vt),
              p("marker", {
                id: f(o).options.instanceId + "-start-arrow-default",
                markerWidth: f(o).options.defaultLineMarker.markerWidth,
                markerHeight: f(o).options.defaultLineMarker.markerHeight,
                refX: f(o).options.defaultLineMarker.refX,
                refY: f(o).options.defaultLineMarker.refY,
                "marker-units": "strokeWidth",
                orient: "auto",
                viewBox: "0 0 12 12"
              }, [
                p("path", {
                  style: D({ fill: f(o).options.defaultLineColor }),
                  d: f(o).options.defaultLineMarker.data,
                  transform: "translate(12,12)rotate(180)"
                }, null, 12, Ot)
              ], 8, Tt),
              p("marker", {
                id: f(o).options.instanceId + "-arrow-checked",
                markerUnits: "strokeWidth",
                markerWidth: "12",
                markerHeight: "12",
                viewBox: "0 0 12 12",
                refX: "6",
                refY: "6",
                orient: "auto"
              }, [
                p("path", {
                  style: D({ fill: f(o).options.checkedLineColor }),
                  d: "M2,2 L10,6 L2,10 L6,6 L2,2"
                }, null, 4)
              ], 8, jt),
              p("marker", {
                id: f(o).options.instanceId + "-start-arrow-checked",
                markerUnits: "strokeWidth",
                markerWidth: "12",
                markerHeight: "12",
                viewBox: "0 0 12 12",
                refX: "6",
                refY: "6",
                orient: "auto"
              }, [
                p("path", {
                  style: D({ fill: f(o).options.checkedLineColor }),
                  d: "M2,2 L10,6 L2,10 L6,6 L2,2",
                  transform: "translate(12,12)rotate(180)"
                }, null, 4)
              ], 8, Jt),
              (g(!0), x(R, null, Z(f(o).allLineColors, (d) => (g(), x("marker", {
                id: f(o).options.instanceId + "-arrow-" + d.id,
                key: d.id,
                markerWidth: f(o).options.defaultLineMarker.markerWidth,
                markerHeight: f(o).options.defaultLineMarker.markerHeight,
                refX: f(o).options.defaultLineMarker.refX,
                refY: f(o).options.defaultLineMarker.refY,
                "marker-units": "strokeWidth",
                orient: "auto"
              }, [
                p("path", {
                  fill: f(o).options.defaultLineMarker.color || d.color,
                  d: f(o).options.defaultLineMarker.data
                }, null, 8, Yt)
              ], 8, Zt))), 128)),
              (g(!0), x(R, null, Z(f(o).allLineColors, (d) => (g(), x("marker", {
                id: f(o).options.instanceId + "-start-arrow-" + d.id,
                key: "start-" + d.id,
                markerWidth: f(o).options.defaultLineMarker.markerWidth,
                markerHeight: f(o).options.defaultLineMarker.markerHeight,
                refX: f(o).options.defaultLineMarker.refX,
                refY: f(o).options.defaultLineMarker.refY,
                "marker-units": "strokeWidth",
                orient: "auto"
              }, [
                p("path", {
                  fill: f(o).options.defaultLineMarker.color || d.color,
                  d: f(o).options.defaultLineMarker.data,
                  transform: "translate(12,12)rotate(180)"
                }, null, 8, Ut)
              ], 8, Xt))), 128)),
              (g(!0), x(R, null, Z(f(o).graphData.links, (d) => (g(), x(R, null, [
                (g(!0), x(R, null, Z(d.relations, (h, w) => (g(), x(R, null, [
                  f(o).options.lineUseTextPath || h.useTextPath ? (g(), ne(Ft, {
                    key: h.seeks_id,
                    link: d,
                    relation: h,
                    "relation-index": w
                  }, null, 8, ["link", "relation", "relation-index"])) : B("", !0)
                ], 64))), 256))
              ], 64))), 256))
            ]),
            (g(!0), x(R, null, Z(f(o).graphData.links, (d) => (g(), ne(At, {
              key: d.seeks_id,
              "link-props": d
            }, {
              line: re(({ line: h }) => [
                T(c.$slots, "line", {
                  line: h,
                  link: d
                }, void 0, !0)
              ]),
              _: 2
            }, 1032, ["link-props"]))), 128))
          ], 4))
        ], 512),
        p("div", qt, [
          (g(!0), x(R, null, Z(f(o).graphData.nodes, (d) => (g(), ne(kt, {
            key: d.seeks_id,
            "node-props": d
          }, {
            node: re(({ node: h }) => [
              T(c.$slots, "node", { node: h }, void 0, !0)
            ]),
            _: 2
          }, 1032, ["node-props"]))), 128))
        ])
      ], 4)
    ], 38));
  }
});
const Kt = /* @__PURE__ */ q(Qt, [["__scopeId", "data-v-0bec2dcf"]]), eo = { class: "c-debug-tools-row" }, to = /* @__PURE__ */ O({
  __name: "GraphDebugPanel",
  setup(n) {
    const e = X(j).value;
    W(""), W("");
    const t = W(!1), o = () => {
      t.value = !t.value;
    }, s = () => {
      console.log("options:", e.getGraphJsonOptions());
    }, i = () => {
      console.log("data:", e.getGraphJsonData());
    }, a = () => {
      e.enableDebugLog(!e.options.debug), _("debugLog:", e.options.debug);
    };
    return (l, r) => (g(), x("div", null, [
      p("div", {
        class: F([[], "c-setting-panel-button"]),
        onClick: o
      }, " Debug "),
      t.value ? (g(), x("div", {
        key: 0,
        class: F([[], "c-setting-panel"])
      }, [
        p("div", { class: "c-debug-tools-row" }, [
          p("button", { onClick: s }, "print options in console")
        ]),
        p("div", { class: "c-debug-tools-row" }, [
          p("button", { onClick: i }, "print json data in console")
        ]),
        p("div", eo, [
          Be(" debug log status: " + oe(f(e).options.debug), 1),
          p("button", { onClick: a }, oe(f(e).options.debug ? "disable" : "enable") + " debug log ", 1)
        ])
      ])) : B("", !0)
    ]));
  }
});
const oo = /* @__PURE__ */ q(to, [["__scopeId", "data-v-88390d64"]]), no = {
  ref: "miniView",
  class: "c-mini-graph"
}, so = /* @__PURE__ */ O({
  __name: "GraphMiniView",
  setup(n) {
    const e = X(j).value, t = W(100), o = W(0), s = {
      minX: 9999,
      maxX: -9999,
      minY: 9999,
      maxY: -9999
    }, i = () => {
      let l = 9999, r = -9999, c = 9999, u = -9999;
      for (let d = 0; d < e.graphData.nodes.length; d++) {
        const h = e.graphData.nodes[d];
        h.x < l && (l = h.x), h.x > r && (r = h.x), h.y < c && (c = h.y), h.y > u && (u = h.y);
      }
      return o.value = (u - c) * t.value / (r - l), s.minX = l, s.minY = c, s.maxX = r, s.maxY = u, o.value;
    }, a = (l) => N.isAllowShowNode(l);
    return (l, r) => (g(), x("div", no, [
      p("div", {
        style: D({
          width: t.value + "px",
          height: i() + "px"
        }),
        class: "c-mini-canvas"
      }, [
        (g(!0), x(R, null, Z(f(e).graphData.nodes, (c) => (g(), x(R, null, [
          a(c) ? (g(), x("div", {
            key: c.id,
            style: D({
              left: (c.x - s.minX) * t.value / (s.maxX - s.minX) + "px",
              top: (c.y - s.minY) * o.value / (s.maxY - s.minY) + "px"
            }),
            class: "c-mini-node"
          }, null, 4)) : B("", !0)
        ], 64))), 256))
      ], 4)
    ], 512));
  }
});
const io = /* @__PURE__ */ q(so, [["__scopeId", "data-v-1b3b937f"]]), M = (n) => (we("data-v-e412eb0e"), n = n(), be(), n), ao = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-resize-" })
], -1)), lo = { class: "c-mb-text" }, ro = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-fangda" })
], -1)), co = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u653E\u5927", -1)), ho = [
  ro,
  co
], uo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-suoxiao" })
], -1)), fo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u7F29\u5C0F", -1)), po = [
  uo,
  fo
], _o = {
  key: 3,
  class: "c-mb-button"
}, mo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-yuanquanfenxiang" })
], -1)), go = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u5E03\u5C40", -1)), yo = ["onClick"], vo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-yuanquanfenxiang" })
], -1)), xo = { class: "c-mb-text" }, wo = {
  key: 4,
  class: "c-mb-button"
}, bo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-hj2" })
], -1)), Co = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u7EBF\u6761", -1)), ko = {
  class: "c-mb-child-panel",
  style: { width: "256px", "margin-left": "-255px" }
}, Mo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-hj2" })
], -1)), Lo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u76F4\u7EBF", -1)), So = [
  Mo,
  Lo
], zo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-lianjieliu" })
], -1)), $o = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u7B80\u6D01", -1)), Eo = [
  zo,
  $o
], Po = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-lianjieliu" })
], -1)), No = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u751F\u52A8", -1)), Bo = [
  Po,
  No
], Ao = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-lianjieliu" })
], -1)), Io = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u9C7C\u5C3E", -1)), Fo = [
  Ao,
  Io
], Do = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-hj2" })
], -1)), Ho = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u6298\u7EBF", -1)), Wo = [
  Do,
  Ho
], Go = {
  key: 5,
  class: "c-mb-button"
}, Vo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-lianjie_connecting5" })
], -1)), Ro = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u8FDE\u63A5\u70B9", -1)), To = {
  class: "c-mb-child-panel",
  style: { width: "206px", "margin-left": "-205px" }
}, Oo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-lianjie_connecting5" })
], -1)), jo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u8FB9\u7F18", -1)), Jo = [
  Oo,
  jo
], Zo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-lianjie_connecting5" })
], -1)), Yo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u56DB\u70B9", -1)), Xo = [
  Zo,
  Yo
], Uo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-lianjie_connecting5" })
], -1)), qo = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u4E0A\u4E0B", -1)), Qo = [
  Uo,
  qo
], Ko = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-lianjie_connecting5" })
], -1)), en = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u5DE6\u53F3", -1)), tn = [
  Ko,
  en
], on = ["title"], nn = {
  key: 0,
  class: "rg-icon",
  "aria-hidden": "true"
}, sn = /* @__PURE__ */ M(() => /* @__PURE__ */ p("use", { "xlink:href": "#icon-zidong" }, null, -1)), an = [
  sn
], ln = {
  key: 1,
  class: "c-loading-icon rg-icon",
  "aria-hidden": "true"
}, rn = /* @__PURE__ */ M(() => /* @__PURE__ */ p("use", { "xlink:href": "#icon-lianjiezhong" }, null, -1)), cn = [
  rn
], dn = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u81EA\u52A8", -1)), hn = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-ico_reset" })
], -1)), un = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u5237\u65B0", -1)), fn = [
  hn,
  un
], pn = {
  key: 8,
  class: "c-mb-button"
}, _n = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-ziyuan" })
], -1)), mn = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "\u4E0B\u8F7D", -1)), gn = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-tupian" })
], -1)), yn = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "PNG", -1)), vn = [
  gn,
  yn
], xn = /* @__PURE__ */ M(() => /* @__PURE__ */ p("svg", {
  class: "rg-icon",
  "aria-hidden": "true"
}, [
  /* @__PURE__ */ p("use", { "xlink:href": "#icon-tupian" })
], -1)), wn = /* @__PURE__ */ M(() => /* @__PURE__ */ p("span", { class: "c-mb-text" }, "JPG", -1)), bn = [
  xn,
  wn
], Cn = /* @__PURE__ */ O({
  __name: "GraphMiniToolBar",
  setup(n) {
    const e = X(j).value, t = W(275), o = W(0), s = W(106);
    ue(() => {
      e.options.layouts.length > 1 && (t.value -= 40);
    });
    const i = () => {
      e.refresh();
    }, a = (c) => {
      _("change layout:", c), rt(c, e.options), i();
    }, l = () => {
      e.startAutoLayout();
    }, r = () => {
      o.value++, setTimeout(() => {
        o.value > 0 && o.value--;
      }, 2e3), o.value > 5 && (o.value = 0, e.printGraphJsonData());
    };
    return (c, u) => (g(), x("div", {
      style: D({
        "margin-left": f(e).options.viewELSize.width - 50 + "px",
        "margin-top": (f(e).options.viewELSize.height - 260) / 2 + "px"
      }),
      class: "c-mini-toolbar"
    }, [
      p("div", {
        class: "c-mb-button",
        style: { "margin-top": "0px" },
        onClick: u[0] || (u[0] = (d) => f(e).fullscreen())
      }, [
        ao,
        p("span", lo, oe(f(e).options.fullscreen ? "\u9000\u51FA" : "\u5168\u5C4F"), 1)
      ]),
      f(e).options.allowShowZoomMenu ? (g(), x("div", {
        key: 0,
        class: "c-mb-button",
        onClick: u[1] || (u[1] = (d) => f(e).zoom(20))
      }, ho)) : B("", !0),
      f(e).options.allowShowZoomMenu ? (g(), x("div", {
        key: 1,
        style: { float: "left", "margin-top": "0px", height: "20px", width: "40px", "border-top": "0px", "border-bottom": "0px", "background-color": "#efefef", color: "#262626", "font-size": "10px", "text-align": "center", "line-height": "20px" },
        onClick: r
      }, oe(f(e).options.canvasZoom) + "% ", 1)) : B("", !0),
      f(e).options.allowShowZoomMenu ? (g(), x("div", {
        key: 2,
        class: "c-mb-button",
        style: { "margin-top": "0px" },
        onClick: u[2] || (u[2] = (d) => f(e).zoom(-20))
      }, po)) : B("", !0),
      f(e).options.layouts.length > 1 ? (g(), x("div", _o, [
        mo,
        go,
        p("div", {
          style: D({
            width: f(e).options.layouts.length * 70 + 6 + "px",
            "margin-left": f(e).options.layouts.length * -70 - 5 + "px"
          }),
          class: "c-mb-child-panel"
        }, [
          (g(!0), x(R, null, Z(f(e).options.layouts, (d) => (g(), x("div", {
            key: d.label,
            class: F(["c-mb-button c-mb-button-c", {
              "c-mb-button-on": f(e).options.layoutLabel === d.label
            }]),
            style: { width: "70px" },
            onClick: (h) => a(d)
          }, [
            vo,
            p("span", xo, oe(d.label), 1)
          ], 10, yo))), 128))
        ], 4)
      ])) : B("", !0),
      f(e).options.allowSwitchLineShape ? (g(), x("div", wo, [
        bo,
        Co,
        p("div", ko, [
          p("div", {
            class: F([{
              "c-mb-button-on": f(e).options.defaultLineShape === 1
            }, "c-mb-button c-mb-button-c"]),
            style: { width: "50px" },
            onClick: u[3] || (u[3] = (d) => f(e).setDefaultLineShape(1))
          }, So, 2),
          p("div", {
            class: F([{
              "c-mb-button-on": f(e).options.defaultLineShape === 2
            }, "c-mb-button c-mb-button-c"]),
            style: { width: "50px" },
            onClick: u[4] || (u[4] = (d) => f(e).setDefaultLineShape(2))
          }, Eo, 2),
          p("div", {
            class: F([{
              "c-mb-button-on": f(e).options.defaultLineShape === 6
            }, "c-mb-button c-mb-button-c"]),
            style: { width: "50px" },
            onClick: u[5] || (u[5] = (d) => f(e).setDefaultLineShape(6))
          }, Bo, 2),
          p("div", {
            class: F([{
              "c-mb-button-on": f(e).options.defaultLineShape === 5
            }, "c-mb-button c-mb-button-c"]),
            style: { width: "50px" },
            onClick: u[6] || (u[6] = (d) => f(e).setDefaultLineShape(5))
          }, Fo, 2),
          p("div", {
            class: F([{
              "c-mb-button-on": f(e).options.defaultLineShape === 4
            }, "c-mb-button c-mb-button-c"]),
            style: { width: "50px" },
            onClick: u[7] || (u[7] = (d) => f(e).setDefaultLineShape(4))
          }, Wo, 2)
        ])
      ])) : B("", !0),
      f(e).options.allowSwitchJunctionPoint ? (g(), x("div", Go, [
        Vo,
        Ro,
        p("div", To, [
          p("div", {
            class: F([{
              "c-mb-button-on": f(e).options.defaultJunctionPoint === "border"
            }, "c-mb-button c-mb-button-c"]),
            style: { width: "50px" },
            onClick: u[8] || (u[8] = (d) => f(e).setDefaultJunctionPoint("border"))
          }, Jo, 2),
          p("div", {
            class: F([{
              "c-mb-button-on": f(e).options.defaultJunctionPoint === "ltrb"
            }, "c-mb-button c-mb-button-c"]),
            style: { width: "50px" },
            onClick: u[9] || (u[9] = (d) => f(e).setDefaultJunctionPoint("ltrb"))
          }, Xo, 2),
          p("div", {
            class: F([{
              "c-mb-button-on": f(e).options.defaultJunctionPoint === "tb"
            }, "c-mb-button c-mb-button-c"]),
            style: { width: "50px" },
            onClick: u[10] || (u[10] = (d) => f(e).setDefaultJunctionPoint("tb"))
          }, Qo, 2),
          p("div", {
            class: F([{
              "c-mb-button-on": f(e).options.defaultJunctionPoint === "lr"
            }, "c-mb-button c-mb-button-c"]),
            style: { width: "50px" },
            onClick: u[11] || (u[11] = (d) => f(e).setDefaultJunctionPoint("lr"))
          }, tn, 2)
        ])
      ])) : B("", !0),
      f(e).options.allowAutoLayoutIfSupport && f(e).options.isNeedShowAutoLayoutButton ? (g(), x("div", {
        key: 6,
        title: f(e).options.autoLayouting ? "\u70B9\u51FB\u505C\u6B62\u81EA\u52A8\u5E03\u5C40" : "\u70B9\u51FB\u5F00\u59CB\u81EA\u52A8\u8C03\u6574\u5E03\u5C40",
        class: F([{ "c-mb-button-on": f(e).options.autoLayouting }, "c-mb-button"]),
        onClick: l
      }, [
        f(e).options.autoLayouting ? (g(), x("svg", ln, cn)) : (g(), x("svg", nn, an)),
        dn
      ], 10, on)) : B("", !0),
      f(e).options.allowShowRefreshButton ? (g(), x("div", {
        key: 7,
        class: "c-mb-button",
        onClick: i
      }, fn)) : B("", !0),
      f(e).options.allowShowDownloadButton ? (g(), x("div", pn, [
        _n,
        mn,
        p("div", {
          style: D({
            width: s.value + "px",
            "margin-left": s.value * -1 + "px"
          }),
          class: "c-mb-child-panel"
        }, [
          p("div", {
            class: "c-mb-button c-mb-button-c",
            style: { width: "50px" },
            onClick: u[12] || (u[12] = (d) => f(e).downloadAsImage("png"))
          }, vn),
          p("div", {
            class: "c-mb-button c-mb-button-c",
            style: { width: "50px" },
            onClick: u[13] || (u[13] = (d) => f(e).downloadAsImage("jpg"))
          }, bn)
        ], 4)
      ])) : B("", !0)
    ], 4));
  }
});
const kn = /* @__PURE__ */ q(Cn, [["__scopeId", "data-v-e412eb0e"]]), Mn = /* @__PURE__ */ O({
  __name: "index",
  props: {
    options: null,
    relationGraphCore: null,
    onNodeClick: { type: Function },
    onNodeExpand: { type: Function },
    onNodeCollapse: { type: Function },
    onLineClick: { type: Function },
    onImageDownload: { type: Function },
    onImageSaveAsFile: { type: Function }
  },
  emits: [
    "on-node-click",
    "on-node-expand",
    "on-node-collapse",
    "on-line-click",
    "on-download-excel",
    "on-image-download",
    "on-image-save-as-file"
  ],
  setup(n, { expose: e }) {
    const t = n;
    _("appendIconSvg:", Ge);
    const o = W(), s = W();
    Ae(j, s), _("---------------------------graph mounted---------------------------"), ue(() => {
      je(), _("---------------------------graph mounted---------------------------");
      const a = {
        "on-node-click": t.onNodeClick,
        "on-node-expand": t.onNodeExpand,
        "on-node-collapse": t.onNodeCollapse,
        "on-line-click": t.onLineClick,
        "on-image-download": t.onImageDownload,
        "on-image-save-as-file": t.onImageSaveAsFile
      }, l = t.relationGraphCore || new yt(t.options, a);
      l.setDom(o.value), l.ready(), s.value = l, de.on("change", i);
    }), xe(() => {
      de.off("change", i);
    });
    const i = () => {
      s.value.fullscreen(de.isFullscreen);
    };
    return e({
      onFullscreen: i,
      getInstance() {
        return s.value;
      },
      setOptions(a, l) {
        s.value.setOptions(a, l);
      },
      setJsonData(a, l, r) {
        arguments.length === 2 && typeof l == "function" && (r = l, l = !0), s.value.setJsonData(
          a,
          l,
          (c) => {
            Ie(() => {
              c.playShowEffect(() => {
                r && r(c);
              });
            });
          }
        );
      },
      appendJsonData(a, l, r) {
        arguments.length === 2 && typeof l == "function" && (r = l, l = !0), s.value.appendJsonData(a, l, r);
      },
      setLayouter(a) {
        s.value.setLayouter(a);
      },
      onGraphResize() {
        s.value.refreshNVAnalysisInfo();
      },
      refresh() {
        s.value.refresh();
      },
      focusRootNode() {
        s.value.focusRootNode();
      },
      focusNodeById(a) {
        return s.value.focusNodeById(a);
      },
      getNodeById(a) {
        return s.value.getNodeById(a);
      },
      removeNodeById(a) {
        return s.value.removeNodeById(a);
      },
      getNodes() {
        return s.value.getNodes();
      },
      getLinks() {
        return s.value.getLinks();
      },
      getGraphJsonData() {
        return s.value.getGraphJsonData();
      },
      getGraphJsonOptions() {
        return s.value.getGraphJsonOptions();
      }
    }), (a, l) => (g(), x("div", {
      ref_key: "seeksRelationGraph$",
      ref: o,
      style: D([{ width: "100%", height: "100%" }, { "box-sizing": "border-box" }])
    }, [
      s.value && s.value.options ? (g(), x(R, { key: 0 }, [
        s.value.options.showDebugPanel ? (g(), ne(oo, { key: 0 })) : B("", !0),
        s.value.options.allowShowMiniToolBar === !0 ? T(a.$slots, "miniToolBar", { key: 1 }, () => [
          ge(kn)
        ], !0) : B("", !0),
        s.value.options.allowShowMiniView === !0 ? T(a.$slots, "miniViewPanel", { key: 2 }, () => [
          ge(io)
        ], !0) : B("", !0),
        T(a.$slots, "graph-plug", { relationGraph: s.value }, void 0, !0),
        s.value ? (g(), ne(Kt, { key: 3 }, {
          node: re(({ node: r }) => [
            T(a.$slots, "node", {
              node: r,
              relationGraph: s.value
            }, void 0, !0)
          ]),
          line: re(({ line: r, link: c }) => [
            T(a.$slots, "line", {
              line: r,
              link: c,
              relationGraph: s.value
            }, void 0, !0)
          ]),
          "canvas-plug": re(() => [
            T(a.$slots, "canvas-plug", { relationGraph: s.value }, void 0, !0)
          ]),
          _: 3
        })) : B("", !0)
      ], 64)) : B("", !0)
    ], 512));
  }
});
const he = /* @__PURE__ */ q(Mn, [["__scopeId", "data-v-11ec9aad"]]);
he.install = (n) => {
  n.component("RelationGraph", he), n.component("SeeksRelationGraph", he);
};
const Se = he, En = Se, Pn = Ce, Nn = Se;
export {
  En as RelationGraph,
  Nn as default,
  Pn as version
};
